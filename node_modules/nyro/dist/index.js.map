{"version":3,"sources":["../src/index.ts","../src/services/engine.ts","../package.json","../src/services/utils.ts","../src/helpers/combineUrl.ts","../src/helpers/errorHandler.ts","../src/services/pluginManager.ts","../src/helpers/types.ts","../src/services/headersConstructor.ts","../src/services/optionsConstructor.ts","../src/helpers/checkVersion.ts","../src/services/proxyManager.ts","../src/services/userAgentConstuctor.ts"],"sourcesContent":["/**\n * @fileoverview Entry point for the requester module.\n * \n * This file imports the main engine from the services directory and exports it as the default export.\n * Additionally, it re-exports all types from the helpers/types module.\n * \n * @module requester\n */\n\nimport NyroClass, {\n    RequestInfo,\n    RequestOptions as OptionsInterface,\n    HttpResponse as ResponseInterface,\n    Headers as HeadersInterface,\n    InferBodySchema,\n    BodyFromSchema,\n    Events,\n    QueueOptions,\n    PaginationOptions,\n    AuthOptions,\n    ProxyOptions\n} from './services/engine';\nimport Headers from './services/headersConstructor';\nimport Options from './services/optionsConstructor';\nimport NyroError, { isNyroError, NyroErrorInterface, NyroErrorResponse } from './helpers/errorHandler';\nimport checkVersion from './helpers/checkVersion';\nimport Proxy, {\n    Protocol,\n    ProxyAPIOptions,\n    ProxyAPIResponse,\n    ProxyObject,\n    ProxyFetchOptions,\n    ProxyFormat,\n    ProxyFilterOptions,\n    OmitedProxyAPIResponse,\n    Anonymity,\n    Country,\n    Format\n} from './services/proxyManager';\nimport UserAgent, {\n    AndroidVersions,\n    ChromeVersions,\n    SafariVersions,\n    UserAgentBrowser,\n    UserAgentDevice,\n    UserAgentOS,\n    GenerateUserAgentOptions,\n    generateAndroid,\n    generateChrome,\n    generateEdge,\n    generateFirefox,\n    generateSafari,\n    getRandomVersion,\n} from './services/userAgentConstuctor';\nimport PluginManager, { Plugin as PluginInterface } from './services/pluginManager';\n\nvar Nyro = new NyroClass();\n\nconst {\n    version,\n    pkg\n} = NyroClass;\nconst { \n    get,\n    patch,\n    post,\n    put,\n    delete: _delete,\n    head,\n    options,\n    connect,\n    trace,\n    extend,\n    create,\n    request,\n    download,\n    queue,\n    pagination,\n    use,\n    on,\n    off,\n    emit,\n    once,\n    eventNames,\n    removeListener,\n    removeAllListeners,\n    listenerCount,\n    listeners,\n    addListener,\n    getMaxListeners,\n    rawListeners,\n    setMaxListeners,\n    prependListener,\n    prependOnceListener\n } = Nyro;\n\n\n /**\n * @description The main Nyro function.\n * \n * This function is the main entry point for the Nyro module. It is a wrapper around the request function and can be used to make HTTP requests.\n * @async \n * @function nyro\n * @param {OptionsInterface} options - The options for the request.\n * @returns {Promise<ResponseInterface>} A promise that resolves to the response object.\n * @example nyro({ url: 'https://jsonplaceholder.typicode.com/posts/1', method: 'GET' }).then(console.log);\n * @example nyro.get('https://jsonplaceholder.typicode.com/posts/1').then(res => res.json()).then(console.log);\n * @example nyro.post('https://jsonplaceholder.typicode.com/posts', { body: { title: 'foo', body: 'bar', userId: 1 } }).then(console.log);\n */\nconst nyro = Object.assign(async <T, B>(options: OptionsInterface<B>) => {\n    return Nyro.request({ ...Nyro.baseRequestOptions, ...options}) as Promise<ResponseInterface<any, BodyFromSchema<B,OptionsInterface>>>\n}, Nyro);\n\n\n/* Nyro Method Functions */\nnyro.get = get;\nnyro.post = post;\nnyro.put = put;\nnyro.patch = patch;\nnyro.delete = _delete;\nnyro.head = head;\nnyro.options = options;\nnyro.connect = connect;\nnyro.trace = trace;\nnyro.extend = extend;\nnyro.request = request;\nnyro.create = create;\nnyro.download = download;\nnyro.queue = queue;\nnyro.pagination = pagination;\nnyro.use = use;\n\n/* Nyro Events */\n(nyro as any).on = on;\n(nyro as any).off = off;\n(nyro as any).once = once;\n(nyro as any).emit = emit;\n(nyro as any).eventNames = eventNames;\n(nyro as any).removeListener = removeListener;\n(nyro as any).removeAllListeners = removeAllListeners;\n(nyro as any).listenerCount = listenerCount;\n(nyro as any).listeners = listeners;\n(nyro as any).addListener = addListener;\n(nyro as any).getMaxListeners = getMaxListeners;\n(nyro as any).rawListeners = rawListeners;\n(nyro as any).setMaxListeners = setMaxListeners;\n(nyro as any).prependListener = prependListener;\n(nyro as any).prependOnceListener = prependOnceListener;\n\n\nNyroClass.version = version;\nNyroClass.pkg = pkg;\n\n/**\n * @description Check for updates to the Nyro package.\n *  \n * @param {NyroClass} nyro - The Nyro instance to check for updates.\n * @param {string} version - The current version of the Nyro package.\n * @param {boolean} checkUpdates - Whether or not to check for updates.\n */\ncheckVersion(nyro, version, true);\n\ntype NyroType = typeof nyro;\n\nexport default nyro;\nimport {\n    ContentType,\n    StatusCode,\n    Method,\n    ResponseEncoding,\n    ResponseType,\n} from './helpers/types';\nexport { \n    Nyro,\n    NyroType,\n    request,\n    extend,\n    get,\n    post,\n    put,\n    patch,\n    _delete as delete,\n    head,\n    options,\n    connect,\n    trace,\n    RequestInfo,\n    Options,\n    OptionsInterface,\n    ResponseInterface,\n    Headers,\n    HeadersInterface,\n    InferBodySchema,\n    BodyFromSchema,\n    version,\n    NyroError,\n    NyroErrorInterface,\n    NyroErrorResponse,\n    isNyroError,\n    Proxy,\n    Protocol,\n    ProxyAPIOptions,\n    ProxyAPIResponse,\n    ProxyObject,\n    ProxyFetchOptions,\n    ProxyFormat,\n    ProxyFilterOptions,\n    OmitedProxyAPIResponse,\n    Anonymity,\n    Country,\n    Format,\n    UserAgent,\n    AndroidVersions,\n    ChromeVersions,\n    SafariVersions,\n    UserAgentBrowser,\n    UserAgentDevice,\n    UserAgentOS,\n    GenerateUserAgentOptions,\n    generateAndroid,\n    generateChrome,\n    generateEdge,\n    generateFirefox,\n    generateSafari,\n    getRandomVersion,\n    PluginManager as Plugin,\n    PluginInterface,\n    ContentType,\n    StatusCode,\n    Method,\n    ResponseEncoding,\n    ResponseType,\n    Events,\n    QueueOptions,\n    PaginationOptions,\n    AuthOptions,\n    ProxyOptions\n };","import * as http from 'http';\nimport * as https from 'https';\nimport * as http2 from 'http2-wrapper';\nimport * as zlib from 'zlib';\nimport { URL, URLSearchParams } from 'url';\nimport { getReusedSocket, getServerIp, getDefaultUserAgent, generateUniqueId } from './utils';\nimport combineURL from '../helpers/combineUrl';\nimport ErrorHandler from '../helpers/errorHandler';\nimport PluginManager, { Plugin } from './pluginManager';\nimport { HttpProxyAgent } from 'http-proxy-agent';\nimport { HttpsProxyAgent } from 'https-proxy-agent';\nimport { SocksProxyAgent } from 'socks-proxy-agent';\nimport { PassThrough } from 'stream';\nimport { EventEmitter } from 'events';\nimport packageJson from '../../package.json';\nimport {\n    Headers\n} from '../helpers/types';\n\ninterface CacheItem { \n    response: HttpResponse<any, any>; \n    expiry: number;\n};\n  \nconst cacheStore = new Map<string, CacheItem>();\n\ninterface ProxyOptions {\n    host: string;\n    port: number;\n    auth?: {\n        username: string;\n        password: string;\n    };\n    protocol?: ('http' | 'https' | 'socks' | 'socks4' | 'socks5' | 'socks4a' | 'socks5h' & string);\n}\n\ninterface AuthOptions {\n    username: string;\n    password: string;\n};\n\ninterface PaginationOptions {\n    pageParam: string;\n    limitParam: string;\n    maxPages?: number;\n};\n\ninterface QueueOptions {\n    delay?: number;\n};\n\ntype InferBodySchema<T> = T extends Record<string, infer U> ? { [K in keyof T]: T[K] extends NumberConstructor ? number : T[K] extends StringConstructor ? string : any } : any;\n\ninterface RequestOptions<B = any> {\n    requestId?: string;\n    method?: ('GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH' | 'HEAD' | 'OPTIONS' | 'CONNECT' | 'TRACE' | 'get' | 'post' | 'put' | 'delete' | 'patch' | 'head' | 'options' | 'connect' | 'trace' & string);\n    port?: number;\n    url?: string;\n    path?: string;\n    headers?: (Headers & Record<string, string>);\n    body?: any;\n    timeout?: number;\n    params?: Record<string, string>;\n    baseURL?: string;\n    query?: Record<string, string | number | boolean>;\n    responseType?: ('json' | 'text' | 'blob' | 'stream' | 'arrayBuffer' | 'document' & string);\n    responseEncoding?: BufferEncoding;\n    timeoutErrorMessage?: string;\n    onTimeout?: () => void;\n    isStream?: boolean;\n    useHttp2?: boolean;\n    validateStatus?: (status: number) => boolean;\n    decompress?: boolean;\n    proxy?: ProxyOptions;\n    maxRedirects?: number;\n    auth?: AuthOptions;\n    maxBodyLength?: number;\n    maxContentLength?: number;\n    maxRate?: number;\n    signal?: AbortSignal;\n    bodySchema?: B;\n    cache?: boolean;\n    cacheTTL?: number;\n    retries?: number;\n    retryDelay?: number;\n    onRetry?: (req: http.RequestOptions, error: Error) => boolean;\n    onDownloadProgress?: (progress: { \n        percent: number;\n        transferredBytes: number;\n        totalBytes: number;\n    }) => void;\n    onRequest?: (options:RequestOptions<B>) => RequestOptions<B>|void;\n    onResponse?: (response: HttpResponse<any, BodyFromSchema<B,RequestOptions>>) => HttpResponse<any, BodyFromSchema<B,RequestOptions>>|void;\n    onChunk?: (chunk: Buffer) => Buffer|void;\n    onRedirect?: (response: http.IncomingMessage) => void;\n    sslOptions?: {\n       key?: Buffer;\n       cert?: Buffer;\n       ca?: Buffer;\n       rejectUnauthorized?: boolean;\n       secureProtocol?: ('SSLv2_method' | 'SSLv3_method' | 'TLSv1_method' | 'TLSv1_1_method' | 'TLSv1_2_method' | 'TLSv1_3_method' & string);\n       ciphers?: string;\n       passphrase?: string;\n    };\n    defaultMode?: boolean;\n}\n\ninterface RequestInfo {\n    requestId: string;\n    method?: string;\n    url?: string;\n    fullUrl: string;\n    headers: (Headers & Record<string, string>);\n    body?: BodyFromSchema<any,RequestOptions>;\n    httpVersion?: string;\n    startTimestamp: number;\n    timeout?: number;\n    contentLength?: number;\n}\n\ntype BodyFromSchema<B, Options> = \n    Options extends { responseType: 'stream' } | { isStream: true } ? PassThrough :\n    B extends typeof Number ? number :\n    B extends typeof String ? string :\n    B extends Record<string, unknown> ? \n    { [K in keyof B] : \n        B[K] extends typeof Number ? number : \n        B[K] extends typeof String ? string : \n        B[K] extends typeof Array ? any[] : \n        B[K] } :\n    B extends ArrayConstructor ? any[] : B;\n\n\ninterface HttpResponse<T, B = any> {\n    requestId: string;\n    body: (BodyFromSchema<B,RequestOptions>);\n    statusCode: number;\n    statusText: string;\n    headers: (Headers & Record<string, string | string[]>);\n    config: RequestOptions<B>;\n    request: http.ClientRequest;\n    requestInfo: RequestInfo;\n    response: http.IncomingMessage;\n    timestamp: {\n        startTimestamp: number;\n        endTimestamp: number;\n    };\n    responseTime: number;\n    responseSize: number;\n    serverIp?: string;\n    connectionReused: boolean;\n    isStream?: boolean;\n    isCached?: boolean;\n}\n\ntype OmitedCreate = Omit<Core, 'create'>;\ntype OmitedExtend = Omit<Core, 'create'>;\n\ninterface Events {\n    ['beforeRequest']: (requestOptions: RequestOptions<any>) => void;\n    ['afterResponse']: (res: HttpResponse<any, any>) => void;\n    ['error']: (error: ErrorHandler) => void;\n};\n\nclass Core extends EventEmitter {\n\npublic baseRequestOptions: RequestOptions;\npublic pluginManager: PluginManager = new PluginManager();\nconstructor(baseRequestOptions?: RequestOptions) {\n    super();\n    this.baseRequestOptions = baseRequestOptions || { };\n};\n\n  use(plugin: Plugin): void {\n    return this.pluginManager.use(plugin);\n  };\n\n  on<K extends keyof Events>(event: K, listener: Events[K]): this {\n    return super.on(event, listener);\n  }\n\n  once<K extends keyof Events>(event: K, listener: Events[K]): this {\n    return super.once(event, listener);\n  }\n\n  off<K extends keyof Events>(event: K, listener: Events[K]): this {\n    return super.off(event, listener);\n  }\n\n  emit<K extends keyof Events>(event: K, ...args: Parameters<Events[K]>): boolean {\n    return super.emit(event, ...args);\n  }\n\n\n/**\n * The version of the Nyro library.\n */\nstatic version = `${packageJson.version}`;\n\n/**\n * The package.json file for the Nyro library.\n */\nstatic pkg = packageJson;\n\n/**\n * @param url\n * @returns this\n * @example Nyro.setURL('https://jsonplaceholder.typicode.com/posts');\n * @description This function sets the URL for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetURL(url: string): this {\n    this.baseRequestOptions.url = url;\n    return this;\n};\n\n/**\n * @param baseURL\n * @returns this\n * @example Nyro.setBaseURL('https://jsonplaceholder.typicode.com');\n * @description This function sets the base URL for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetBaseURL(baseURL: string): this {\n    this.baseRequestOptions.baseURL = baseURL;\n    return this;\n};\n\n/**\n * @param path\n * @returns this\n * @example Nyro.setPath('/posts');\n * @description This function sets the path for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetPath(path: string): this {\n    this.baseRequestOptions.path = path;\n    return this;\n};\n\n/**\n * @param bodySchema\n * @returns this\n * @example Nyro.setBodySchema({ title: String, body: String });\n * @description This function sets the body schema for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetBodySchema(bodySchema: any): this {\n    this.baseRequestOptions.bodySchema = bodySchema;\n    return this;\n};\n\n/**\n * @param auth\n * @returns this\n * @example Nyro.setAuth({ username: 'user', password: 'pass' });\n * @description This function sets the authentication credentials for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetAuth(auth: AuthOptions): this {\n    this.baseRequestOptions.auth = auth;\n    return this;\n};\n\n/**\n * @param proxy\n * @returns this\n * @example Nyro.setProxy({ host: 'localhost', port: 8080, protocol: 'http' });\n * @description This function sets the proxy for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetProxy(proxy: ProxyOptions): this {\n    this.baseRequestOptions.proxy = proxy;\n    return this;\n};\n\n/**\n * @param method\n * @returns this\n * @example Nyro.setMethod('GET');\n * @description This function sets the method for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetMethod(method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH' | 'HEAD' | 'OPTIONS' | 'CONNECT' | 'TRACE'): this {\n    this.baseRequestOptions.method = method;\n    return this;\n};\n\n/**\n * @param headers\n * @returns this\n * @example Nyro.setHeaders({ 'Content-Type': 'application/json' });\n * @description This function sets the headers for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetHeaders(headers: (Headers & Record<string, string>)): this {\n    this.baseRequestOptions.headers = headers;\n    return this;\n};\n\n/**\n * @param params\n * @returns this\n * @example Nyro.setParams({ id: '1' });\n * @description This function sets the query parameters for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetParams(params: Record<string, string>): this {\n    this.baseRequestOptions.params = params;\n    return this;\n};\n\n/**\n * @param query\n * @returns this\n * @example Nyro.setQuery({ id: '1' });\n * @description This function sets the query parameters for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetQuery(query: Record<string, string | number | boolean>): this {\n    this.baseRequestOptions.query = query;\n    return this;\n};\n\n/**\n * @param body\n * @returns this\n * @example Nyro.setBody({ title: 'foo', body: 'bar', userId: 1 });\n * @description This function sets the body for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetBody(body: any): this {\n    this.baseRequestOptions.body = body;\n    return this;\n};\n\n/**\n * @param timeout\n * @returns this\n * @example Nyro.setTimeout(5000);\n * @description This function sets the timeout for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetTimeout(timeout: number): this {\n    this.baseRequestOptions.timeout = timeout;\n    return this;\n};\n\n/**\n * @param retryOn\n * @returns this\n * @example Nyro.setRetryOn((req, error) => error.code === 'ETIMEDOUT');\n * @description This function sets the retry condition for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetRetryOn(retryOn: (req: http.RequestOptions, error: Error) => boolean): this {\n    this.baseRequestOptions.onRetry = retryOn;\n    return this;\n};\n\n/**\n * @param retries\n * @returns this\n * @example Nyro.setRetries(3);\n * @description This function sets the number of retries for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetRetries(retries: number): this {\n    this.baseRequestOptions.retries = retries;\n    return this;\n};\n\n/**\n * @param validateStatus\n * @returns this\n * @example Nyro.setValidateStatus((status) => status >= 200 && status < 300);\n * @description This function sets the status validation for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetValidateStatus(validateStatus: (status: number) => boolean): this {\n    this.baseRequestOptions.validateStatus = validateStatus;\n    return this;\n};\n\n/**\n * @param maxBodyLength\n * @returns this\n * @example Nyro.setMaxBodyLength(1000);\n * @description This function sets the maximum body length for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetMaxBodyLength(maxBodyLength: number): this {\n    this.baseRequestOptions.maxBodyLength = maxBodyLength;\n    return this;\n};\n\n/**\n * @param maxContentLength\n * @returns this\n * @example Nyro.setMaxContentLength(1000);\n * @description This function sets the maximum content length for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetMaxContentLength(maxContentLength: number): this {\n    this.baseRequestOptions.maxContentLength = maxContentLength;\n    return this;\n};\n\n/**\n * @param maxRate\n * @returns this\n * @example Nyro.setMaxRate(1000);\n * @description This function sets the maximum rate for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetMaxRate(maxRate: number): this {\n    this.baseRequestOptions.maxRate = maxRate;\n    return this;\n};\n\n/**\n * @param signal\n * @returns this\n * @example Nyro.setSignal(signal);\n * @description This function sets the signal for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetSignal(signal: AbortSignal): this {\n    this.baseRequestOptions.signal = signal;\n    return this;\n};\n\n/**\n * @param onDownloadProgress\n * @returns this\n * @example Nyro.setOnDownloadProgress((progress) => console.log(progress));\n * @description This function sets the download progress for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetOnDownloadProgress(onDownloadProgress: (progress: { percent: number; transferredBytes: number; totalBytes: number }) => void): this {\n    this.baseRequestOptions.onDownloadProgress = onDownloadProgress;\n    return this;\n};\n\n/**\n * @param timeoutErrorMessage\n * @returns this\n * @example Nyro.setTimeoutErrorMessage('Request timed out');\n * @description This function sets the timeout error message for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetTimeoutErrorMessage(timeoutErrorMessage: string): this {\n    this.baseRequestOptions.timeoutErrorMessage = timeoutErrorMessage;\n    return this;\n};\n\n/**\n * @param responseType\n * @returns this\n * @example Nyro.setResponseType('json');\n * @description This function sets the response type for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetResponseType(responseType: ('json' | 'text' | 'blob' | 'stream' | 'arrayBuffer' | 'document' & string)): this {\n    this.baseRequestOptions.responseType = responseType;\n    return this;\n};\n\n/**\n * @param responseEncoding\n * @returns this\n * @example Nyro.setResponseEncoding('utf8');\n * @description This function sets the response encoding for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetResponseEncoding(responseEncoding: BufferEncoding): this {\n    this.baseRequestOptions.responseEncoding = responseEncoding;\n    return this;\n};\n\n/**\n * @param maxRedirects\n * @returns this\n * @example Nyro.setMaxRedirects(3);\n * @description This function sets the maximum number of redirects for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetMaxRedirects(maxRedirects: number): this {\n    this.baseRequestOptions.maxRedirects = maxRedirects;\n    return this;\n};\n\n/**\n * @param retryDelay\n * @returns this\n * @example Nyro.setRetryDelay(1000);\n * @description This function sets the retry delay for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetRetryDelay(retryDelay: number): this {\n    this.baseRequestOptions.retryDelay = retryDelay;\n    return this;\n};\n\n/**\n * @param decompress\n * @returns this\n * @example Nyro.setDecompress(true);\n * @description This function sets the decompress option for the request.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n */\nsetDecompress(decompress: boolean): this {\n    this.baseRequestOptions.decompress = decompress;\n    return this;\n};\n\n\n/*-------------------------------------------------------*/\n/*----------------LINE-------------BREAK-----------------*/\n/*-------------------------------------------------------*/\n\n\n\n/**\n * Sends a GET request to the specified URL.\n * @param url - The URL to send the request to.\n * @param options - The request options.\n * @returns A promise that resolves with the HTTP response.\n * @example Nyro.get('https://jsonplaceholder.typicode.com/posts');\n * @description This function sends a GET request to the specified URL and returns a promise that resolves with the HTTP response.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET|MDN web docs}\n */\nasync get<T, B>(url?: string, options?: RequestOptions<B>): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    let method: any = 'GET';\n    if(this.baseRequestOptions && this.baseRequestOptions.method !== method) this.baseRequestOptions.method = method;\n    return this.request<T, B>(!url ? this.baseRequestOptions : { ...options, method: this.baseRequestOptions.method || method, url });\n};\n\n\n/**\n * Sends a POST request to the specified URL.\n * @param url - The URL to send the request to.\n * @param options - The request options.\n * @returns A promise that resolves with the HTTP response.\n * @example Nyro.post('https://jsonplaceholder.typicode.com/posts');\n * @description This function sends a POST request to the specified URL and returns a promise that resolves with the HTTP response.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST|MDN web docs}\n */\nasync post<T, B>(url?: string, options?: RequestOptions<B>): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    let method: any = 'POST';\n    if(this.baseRequestOptions && this.baseRequestOptions.method !== method) this.baseRequestOptions.method = method;\n    return this.request<T, B>(!url ? this.baseRequestOptions : { ...options, method: this.baseRequestOptions.method || method, url });\n};\n\n\n/**\n * Sends a PUT request to the specified URL.\n * @param url - The URL to send the request to.\n * @param options - The request options.\n * @returns A promise that resolves with the HTTP response.\n * @example Nyro.put('https://jsonplaceholder.typicode.com/posts');\n * @description This function sends a PUT request to the specified URL and returns a promise that resolves with the HTTP response.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT|MDN web docs}\n */\nasync put<T, B>(url?: string, options?: RequestOptions<B>): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    let method: any = 'PUT';\n    if(this.baseRequestOptions && this.baseRequestOptions.method !== method) this.baseRequestOptions.method = method;\n    return this.request<T, B>(!url ? this.baseRequestOptions : { ...options, method: this.baseRequestOptions.method || method, url });\n};\n\n\n/**\n * Sends a DELETE request to the specified URL.\n * @param url - The URL to send the request to.\n * @param options - The request options.\n * @returns A promise that resolves with the HTTP response.\n * @example Nyro.delete('https://jsonplaceholder.typicode.com/posts');\n * @description This function sends a DELETE request to the specified URL and returns a promise that resolves with the HTTP response.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE|MDN web docs}\n */\nasync delete<T, B>(url?: string, options?: RequestOptions<B>): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    let method: any = 'DELETE';\n    if(this.baseRequestOptions && this.baseRequestOptions.method !== method) this.baseRequestOptions.method = method;\n    return this.request<T, B>(!url ? this.baseRequestOptions : { ...options, method: this.baseRequestOptions.method || method, url });\n};\n\n\n/**\n * Sends a PATCH request to the specified URL.\n * @param url - The URL to send the request to.\n * @param options - The request options.\n * @returns A promise that resolves with the HTTP response.\n * @example Nyro.patch('https://jsonplaceholder.typicode.com/posts');\n * @description This function sends a PATCH request to the specified URL and returns a promise that resolves with the HTTP response.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH|MDN web docs}\n */\nasync patch<T, B>(url?: string, options?: RequestOptions<B>): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    let method: any = 'PATCH';\n    if(this.baseRequestOptions && this.baseRequestOptions.method !== method) this.baseRequestOptions.method = method;\n    return this.request<T, B>(!url ? this.baseRequestOptions : { ...options, method: this.baseRequestOptions.method || method, url });\n};\n\n\n/**\n * Sends a HEAD request to the specified URL.\n * @param url - The URL to send the request to.\n * @param options - The request options.\n * @returns A promise that resolves with the HTTP response.\n * @example Nyro.head('https://jsonplaceholder.typicode.com/posts');\n * @description This function sends a HEAD request to the specified URL and returns a promise that resolves with the HTTP response.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD|MDN web docs}\n */\nasync head<T, B>(url?: string, options?: RequestOptions<B>): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    let method: any = 'HEAD';\n    if(this.baseRequestOptions && this.baseRequestOptions.method !== method) this.baseRequestOptions.method = method;\n    return this.request<T, B>(!url ? this.baseRequestOptions : { ...options, method: this.baseRequestOptions.method || method, url });\n};\n\n/**\n * Sends an OPTIONS request to the specified URL.\n * @param url - The URL to send the request to.\n * @param options - The request options.\n * @returns A promise that resolves with the HTTP response.\n * @example Nyro.options('https://jsonplaceholder.typicode.com/posts');\n * @description This function sends an OPTIONS request to the specified URL and returns a promise that resolves with the HTTP response.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS|MDN web docs}\n */\nasync options<T, B>(url?: string, options?: RequestOptions<B>): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    let method: any = 'OPTIONS';\n    if(this.baseRequestOptions && this.baseRequestOptions.method !== method) this.baseRequestOptions.method = method;\n    return this.request<T, B>(!url ? this.baseRequestOptions : { ...options, method: this.baseRequestOptions.method || method, url });\n};\n\n/**\n * Sends a CONNECT request to the specified URL.\n * @param url - The URL to send the request to.\n * @param options - The request options.\n * @returns A promise that resolves with the HTTP response.\n * @example Nyro.connect('https://jsonplaceholder.typicode.com/posts');\n * @description This function sends a CONNECT request to the specified URL and returns a promise that resolves with the HTTP response.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT|MDN web docs}\n */\nasync connect<T, B>(url?: string, options?: RequestOptions<B>): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    let method: any = 'CONNECT';\n    if(this.baseRequestOptions && this.baseRequestOptions.method !== method) this.baseRequestOptions.method = method;\n    return this.request<T, B>(!url ? this.baseRequestOptions : { ...options, method: this.baseRequestOptions.method || method, url });\n};\n\n/**\n* Sends a TRACE request to the specified URL.\n* @param url - The URL to send the request to.\n* @param options - The request options.\n* @returns A promise that resolves with the HTTP response.\n* @example Nyro.trace('https://jsonplaceholder.typicode.com/posts');\n* @description This function sends a TRACE request to the specified URL and returns a promise that resolves with the HTTP response.\n* @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/TRACE|MDN web docs}\n*/\nasync trace<T, B>(url?: string, options?: RequestOptions<B>): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    return this.request<T, B>(!url ? this.baseRequestOptions : { ...options, method: 'TRACE', url });\n};\n\n\n/**\n * Downloads a file from the specified URL.\n * @param url - The URL to download the file from.\n * @param options - The request options.\n * @returns A promise that resolves with the HTTP response.\n * @example Nyro.download('https://jsonplaceholder.typicode.com/posts');\n * @description This function downloads a file from the specified URL and returns a promise that resolves with the HTTP response.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type|MDN web docs}\n */\nasync download<T, B>(url?: string, options?: RequestOptions<B>): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    return this.request<T, B>({ ...options, responseType: 'stream', isStream: true, method: 'GET', url });\n};\n\n\n/**\n * Sends a request to the specified URL with pagination.\n * @param options - The request options.\n * @param paginationOptions - The pagination options.\n * @returns A promise that resolves with an array of HTTP responses.\n * @example Nyro.pagination({ url: 'https://jsonplaceholder.typicode.com/posts', method: 'GET' }, { pageParam: 'page', limitParam: 'limit', maxPages: 3 });\n * @description This function sends a request to the specified URL with pagination and returns a promise that resolves with an array of HTTP responses.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Status|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_headers|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link|MDN web docs}\n */\nasync pagination<T, B>(options?: RequestOptions<B>,paginationOptions?: PaginationOptions): Promise<Array<HttpResponse<T, BodyFromSchema<B,RequestOptions>>>> {\n    const results: any[] = [];\n    let page = 1;\n    let hasMore = true;\n\n    while (hasMore) {\n        const paginatedOptions = {\n            ...options,\n            params: { ...options?.params, [paginationOptions?.pageParam || 'page']: page }\n        } as RequestOptions<B>;\n\n        const response = await this.request(paginatedOptions);\n        if (Array.isArray(response)) {\n            results.push(...response);\n        } else {\n            results.push(response);\n        }\n\n        hasMore = Array.isArray(response) && response.length > 0 && (!(paginationOptions?.maxPages ?? 0) || page < (paginationOptions?.maxPages ?? 0));\n        page++;\n    }\n\n    return results;\n};\n\n\n/**\n * Sends multiple requests to the specified URLs.\n * @param requests - The request options.\n * @returns A promise that resolves with an array of HTTP responses.\n * @example Nyro.queue([\n * { url: 'https://jsonplaceholder.typicode.com/posts/1', method: 'GET' },\n * { url: 'https://jsonplaceholder.typicode.com/posts/2', method: 'POST' }\n * ]);\n * @description This function sends multiple requests to the specified URLs and returns a promise that resolves with an array of HTTP responses.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Status|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_headers|MDN web docs}\n */\nasync queue<T, B>(requests: Array<RequestOptions<B>>,queueOptions?: QueueOptions): Promise<Array<HttpResponse<T, BodyFromSchema<B,RequestOptions>>>> {\n    return Promise.all(requests.map((request, index) => new Promise<HttpResponse<T, BodyFromSchema<B, RequestOptions>>>((resolve) => setTimeout(() => resolve(this.request<T, B>(request)), index * (queueOptions?.delay ?? 0)))));\n};\n\n/**\n* Extends the default request options with the provided options.\n* \n* @param extendOptions - The options to extend the default request options with.\n* @returns An object with the execute function to make the request and the options used for the request.\n* @example Nyro.extend({\n* url: 'https://jsonplaceholder.typicode.com/posts',\n* method: 'GET',\n* headers: {\n* 'Content-Type': 'application/json'\n* }\n* });\n* @description This function allows you to create a new request with the provided options, while keeping the default options for future requests.\n*/\nasync extend<T, B>(extendOptions: RequestOptions<B>): Promise<OmitedExtend> {\n    var options = { ...this.baseRequestOptions, ...extendOptions };\n    return new Core(options);\n};\n\n/**\n * Creates a new instance of the Nyro library with the provided options.\n * \n * @param options - The request options.\n * @returns A new instance of the Nyro library with the provided options.\n * @example Nyro.create({\n * url: 'https://jsonplaceholder.typicode.com/posts',\n * method: 'GET',\n * headers: {\n * 'Content-Type': 'application/json'\n * }\n * });\n * @description This function creates a new instance of the Nyro library with the provided options.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Status|MDN web docs}\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_headers|MDN web docs}\n */\nasync create<T, B>(options: RequestOptions<B>): Promise<OmitedCreate> {\n    return new Core(options);\n}\n\n/**\n* Core function for handling HTTP requests.\n* \n* @param options - The request options.\n* @param currentRedirects - The number of redirects that have occurred.\n* @returns A promise that resolves with the HTTP response.\n*/\nasync request<T, B>(options?: RequestOptions<B>, currentRedirects = 0, attempt = 1, visitedUrls: Set<string> = new Set()): Promise<HttpResponse<T, BodyFromSchema<B,RequestOptions>>> {\n    if(!options) {\n        options = { ...this.baseRequestOptions };\n    } else {\n        options = { ...this.baseRequestOptions, ...options };\n    };\n\n    const combinedURL = combineURL(options?.baseURL || '', options?.url || \"\", options?.path || '');\n    try {\n    var fullUrl = new URL(combinedURL);\n    } catch (error) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid URL: ${combinedURL}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid URL: ${combinedURL}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n    }\n    \n\n    visitedUrls.add(fullUrl.toString());\n\n    if (options?.signal?.aborted) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 0,\n            message: 'Request aborted',\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 0,\n            message: 'Request aborted',\n            name: 'Request',\n            requestOptions: options,\n        }));\n    };\n\n    if(options?.port) {\n    options.port = options?.port || (fullUrl.protocol === 'https:' ? 443 : 80);\n    };\n\n    if (options?.path) {\n        fullUrl.pathname += options.path;\n    }\n\n    if(options?.isStream) {\n        options.responseType = 'stream';\n    }\n\n    if (options?.params) {\n        const params = new URLSearchParams(options.params);\n        fullUrl.search = params.toString();\n    }\n\n    if(['json', 'text', 'blob', 'stream', 'arrayBuffer', 'document'].indexOf(options?.responseType || 'json') === -1) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid response type: ${options?.responseType}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid response type: ${options?.responseType}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n    };\n\n    options.method = options.method?.toUpperCase() as RequestOptions['method'] || 'GET';\n\n    if(options && options.method && ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'HEAD', 'OPTIONS', 'CONNECT', 'TRACE'].indexOf(options.method) === -1) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid request method: ${options.method}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid request method: ${options.method}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n    };\n\n    if(options?.timeout && options.timeout < 0) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid timeout: ${options.timeout}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid timeout: ${options.timeout}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n    };\n\n    if(options?.maxRedirects && options.maxRedirects < 0) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid number of redirects: ${options.maxRedirects}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid number of redirects: ${options.maxRedirects}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n    };\n\n    if(options?.maxBodyLength && options.maxBodyLength < 0) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid max body length: ${options.maxBodyLength}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid max body length: ${options.maxBodyLength}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n    };\n\n    if(options?.maxContentLength && options.maxContentLength < 0) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid max content length: ${options.maxContentLength}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid max content length: ${options.maxContentLength}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n    };\n\n    if(options?.maxRate && options.maxRate < 0) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid max rate: ${options.maxRate}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid max rate: ${options.maxRate}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n    };\n\n    if(options?.retryDelay && options.retryDelay < 0) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid retry delay: ${options.retryDelay}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid retry delay: ${options.retryDelay}`,\n            name: 'Request',\n            requestOptions: options,\n        }));\n    };\n    \n    if(options?.retries && options.retries < 0) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid number of retries: ${options.retries}`,\n            name: 'Request',\n            requestOptions: options\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: `Invalid number of retries: ${options.retries}`,\n            name: 'Request',\n            requestOptions: options\n        }));\n    };\n\n    if (options?.query) {\n        const query = new URLSearchParams();\n        for (const key in options.query) {\n            if (Object.prototype.hasOwnProperty.call(options.query, key)) {\n                query.append(key, String(options.query[key]));\n            }\n        }\n        fullUrl.search += (fullUrl.search ? '&' : '') + query.toString();\n    }\n\n    if (options.useHttp2 == undefined) options.useHttp2 = true;\n\n    if (options.useHttp2 && !http2) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: 'http2 is not available in this environment',\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: 'http2 is not available in this environment',\n            name: 'Request',\n            requestOptions: options,\n        }));\n    }\n\n    var isHttps = fullUrl.protocol === 'https:';\n\n    if (!isHttps && options.sslOptions?.passphrase || options.sslOptions?.ca || options.sslOptions?.cert || options.sslOptions?.key || options.sslOptions?.rejectUnauthorized || options.sslOptions?.secureProtocol) {\n        this.emit('error', new ErrorHandler({\n            statusCode: 400,\n            message: 'SSL options are only supported for HTTPS requests',\n            name: 'Request',\n            requestOptions: options,\n        }));\n        return Promise.reject(new ErrorHandler({\n            statusCode: 400,\n            message: 'SSL options are only supported for HTTPS requests',\n            name: 'Request',\n            requestOptions: options,\n        }));\n    }\n\n\n    if (!options.headers) options.headers = { };\n\n    if (options?.headers) {\n    if (!options.headers['User-Agent']) options.headers['User-Agent'] = getDefaultUserAgent();\n    if (!options.headers['Accept']) options.headers['Accept'] = `*/*`;\n    if (!options.headers['Content-Type']) options.headers['Content-Type'] = 'application/json';\n    if (!options.headers['Content-Length']) options.headers['Content-Length'] = '0';\n    }\n\n    if (options && !options?.responseType) {\n        options.responseType = 'json';\n    }\n\n    if (options?.auth && options?.headers) {\n        const { username, password } = options.auth;\n        const token = Buffer.from(`${username}:${password}`).toString('base64');\n        options.headers['Authorization'] = `Basic ${token}`;\n    }\n\n\n    const onRequest = options?.onRequest || ((requestOptions) => requestOptions);\n    const validateStatus = options?.validateStatus || ((status) => status >= 200 && status < 300);\n    const onResponse = options?.onResponse || ((response) => response);\n    const onTimeout = options?.onTimeout || (() => {});\n    const onRedirect = options?.onRedirect || ((response) => response);\n    const onChunk = options?.onChunk || ((chunk) => chunk);\n\n    if(!options?.requestId) options.requestId = generateUniqueId();\n\n    if(!options?.defaultMode) {\n    var onRequestOptions = onRequest(options);\n    if (onRequestOptions) options = { ...onRequest(options), ...options };\n    if(this.pluginManager) options = this.pluginManager.applyOnRequest(options);\n    this.emit('beforeRequest', options);\n    };\n\n\n    var requestOptions: http.RequestOptions = {\n        method: options.method,\n        headers: options?.headers as http.OutgoingHttpHeaders,\n        ...options.sslOptions,\n    };\n\n    if (options?.timeout) {\n        requestOptions.timeout = options.timeout;\n    }\n\n    if (options?.signal) {\n        requestOptions.signal = options.signal;\n    }\n\n    if (options?.proxy) {\n        var proxyAuth = options.proxy.auth ? `${options.proxy.auth.username}:${options.proxy.auth.password}` : '';\n        var proxyUrl = `${options.proxy.host}:${options.proxy.port}`;\n        var protocol = options.proxy?.protocol ? options.proxy.protocol : 'http';\n\n        requestOptions.agent = protocol.includes('socks') \n            ? new SocksProxyAgent(`${protocol}://${proxyAuth ? `${proxyAuth}@` : ''}${proxyUrl}`)  : isHttps\n            ? new HttpsProxyAgent(`${protocol}://${proxyAuth ? `${proxyAuth}@` : ''}${proxyUrl}`)\n            : new HttpProxyAgent(`${protocol}://${proxyAuth ? `${proxyAuth}@` : ''}${proxyUrl}`);\n    }\n\n    const dataString = options?.body ? JSON.stringify(options.body) : null;\n    if (dataString) {\n        if (options?.maxBodyLength && Buffer.byteLength(dataString) > options.maxBodyLength) {\n            return Promise.reject(new ErrorHandler({\n                statusCode: 413,\n                message: `Request body size exceeds maxBodyLength of ${options.maxBodyLength} bytes`,\n                name: 'Request',\n                requestOptions: options\n            }));\n        }\n        requestOptions.headers!['Content-Length'] = Buffer.byteLength(dataString).toString();\n    }\n\n    const startTimestamp = Date.now();\n\n    var lib = options.useHttp2 && isHttps ? http2.request(fullUrl.toString(), requestOptions as http2.RequestOptions) : isHttps ? https.request(fullUrl.toString(),requestOptions) : http.request(fullUrl.toString(),requestOptions);\n    \n    return new Promise((resolve, reject) => {\n        const req = lib.on('response',(res) => {\n\n            var cacheKey = `${options.method}:${fullUrl.toString()}`;\n            \n            if (options.cache && cacheStore.has(cacheKey)) {\n                const cachedItem = cacheStore.get(cacheKey);\n                if (cachedItem && Date.now() < cachedItem.expiry) {\n                  cachedItem.response.isCached = true;\n                  resolve(cachedItem.response);\n                } else {\n                  cacheStore.delete(cacheKey);\n                }\n              }\n            \n            var chunks: any[] = [];\n            let responseData: any;\n            let totalLength = 0;\n            let responseSize = 0;\n            let downloaded = 0;\n            let lastTimestamp = startTimestamp;\n            const contentLength = parseInt(res.headers['content-length'] ?? '0', 10) || null;\n            const connectionReused = getReusedSocket(res);\n            const serverIp = getServerIp(res);\n\n            if(options?.responseType === 'stream') {\n\n                if(options.cache) reject(new ErrorHandler({\n                    statusCode: 400,\n                    message: `Stream responses cannot be cached`,\n                    name: 'Request',\n                    requestOptions: options,\n                }));\n\n                const stream = new PassThrough();\n                res.pipe(stream);\n\n                const response: HttpResponse<T, BodyFromSchema<B,RequestOptions>> = {\n                    request: req,\n                    response: res,\n                    headers: res.headers as Record<string, string | string[]>,\n                    config: options as RequestOptions<BodyFromSchema<B,RequestOptions>>,\n                    requestInfo: {\n                        method: options?.method,\n                        url: options?.url,\n                        fullUrl: fullUrl.href,\n                        headers: options?.headers || {},\n                        body: options?.body,\n                        httpVersion: res.httpVersion,\n                        startTimestamp,\n                        timeout: options?.timeout,\n                        contentLength: dataString ? Buffer.byteLength(dataString) : 0,\n                    },\n                    body: stream,\n                    statusCode: res.statusCode!,\n                    statusText: res.statusMessage || '',\n                    timestamp: {\n                        startTimestamp,\n                        endTimestamp: Date.now(),\n                    },\n                    responseTime: Date.now() - startTimestamp,\n                    responseSize: 0,\n                    serverIp,\n                    connectionReused: connectionReused || false,\n                    isStream: true,\n                    isCached: false,\n                } as HttpResponse<T, BodyFromSchema<B,RequestOptions>>;\n\n                if(!options?.defaultMode) {\n                stream.on('data', (chunk) => {onChunk(chunk);});\n                this.emit('afterResponse', response);\n                };\n                resolve(response);\n            } else {\n            res.on('data', (chunk) => {\n                totalLength += chunk.length;\n                responseSize += chunk.length;\n                downloaded += chunk.length;\n\n                const currentTimestamp = Date.now();\n                const timeElapsed = (currentTimestamp - lastTimestamp) / 1000;\n                lastTimestamp = currentTimestamp;\n\n                const rate = chunk.length / timeElapsed;\n\n                if (contentLength && options?.onDownloadProgress) {\n                    const progress = Math.min(1, downloaded / contentLength);\n                    options.onDownloadProgress({\n                        percent: progress * 100,\n                        transferredBytes: downloaded,\n                        totalBytes: contentLength,\n                    });\n                  };\n\n                if (options?.maxContentLength && responseSize > options.maxContentLength) {\n                    req.destroy();\n                    this.emit('error', new ErrorHandler({\n                        statusCode: 413,\n                        message: `Response size exceeds maxContentLength of ${options.maxContentLength} bytes`,\n                        name: 'Request',\n                        requestOptions: options,\n                    }));\n                    reject(new ErrorHandler({\n                        statusCode: 413,\n                        message: `Response size exceeds maxContentLength of ${options.maxContentLength} bytes`,\n                        name: 'Request',\n                        requestOptions: options,\n                    }));\n                    return;\n                };\n\n                if (options?.maxRate && rate > options.maxRate) {\n                    res.pause();\n\n                    setTimeout(() => {\n                        res.resume();\n                    }, (chunk.length / options.maxRate) * 1000);\n                };\n\n                chunks.push(chunk);\n            });\n\n            res.on('end', async () => {\n                const endTime = Date.now();\n                const responseTime = endTime - startTimestamp;\n                let rawData = Buffer.concat(chunks);\n\n                if (!options?.decompress) {\n                    const encoding = res.headers['content-encoding'];\n                    if (encoding === 'gzip') {\n                        rawData = zlib.gunzipSync(rawData);\n                    } else if (encoding === 'deflate') {\n                        rawData = zlib.inflateSync(rawData);\n                    } else if (encoding === 'br') {\n                        rawData = zlib.brotliDecompressSync(rawData);\n                    }\n                }\n\n                if (res.statusCode && [301, 302, 303, 307, 308].includes(res.statusCode)) {\n                    if(currentRedirects >= (options?.maxRedirects || 5)) {\n                        this.emit('error', new ErrorHandler({\n                            statusCode: 310,\n                            message: `Exceeded maximum number of redirects: ${options?.maxRedirects || 5}`,\n                            name: 'Request',\n                            requestOptions: options,\n                        }));\n                        reject(new ErrorHandler({\n                            statusCode: 310,\n                            message: `Exceeded maximum number of redirects: ${options?.maxRedirects || 5}`,\n                            name: 'Request',\n                            requestOptions: options,\n                        }));\n                        return;\n                    }\n\n                    if (!options.defaultMode) {\n                        onRedirect(res);\n                    }\n\n                    if(!res.headers.location) {\n                        this.emit('error', new ErrorHandler({\n                            statusCode: 310,\n                            message: `Redirect location header missing`,\n                            name: 'Request',\n                            requestOptions: options,\n                        }));\n                        reject(new ErrorHandler({\n                            statusCode: 310,\n                            message: `Redirect location header missing`,\n                            name: 'Request',\n                            requestOptions: options,\n                        }));\n                        return;\n                    }\n\n                    var newUrl = new URL(res.headers.location);\n                    if (visitedUrls.has(newUrl.toString())) {\n                        this.emit('error', new ErrorHandler({\n                            statusCode: 508,\n                            message: `Redirect loop detected`,\n                            name: 'Request',\n                            requestOptions: options,\n                        }));\n                        reject(new ErrorHandler({\n                            statusCode: 508,\n                            message: `Redirect loop detected`,\n                            name: 'Request',\n                            requestOptions: options,\n                        }));\n                        return;\n                    }\n\n                    \n                    try {\n                        if (res.headers.location?.startsWith('http://') || res.headers.location?.startsWith('https://')) {\n                            newUrl = new URL(res.headers.location);\n                        } else {\n                            newUrl = new URL(res.headers.location, fullUrl);\n                        }\n                    } catch (error) {\n                        this.emit('error', new ErrorHandler({\n                            statusCode: 310,\n                            message: `Invalid redirect URL: ${res.headers.location}`,\n                            name: 'Request',\n                            requestOptions: options,\n                        }));\n                        reject(new ErrorHandler({\n                            statusCode: 310,\n                            message: `Invalid redirect URL: ${res.headers.location}`,\n                            name: 'Request',\n                            requestOptions: options,\n                        }));\n                        return;\n                    }\n\n                    \n                    var newOptions: RequestOptions<B> = {\n                        ...options,\n                        url: newUrl.toString(),\n                    };\n\n                    delete newOptions.baseURL;\n                    delete newOptions.path;\n               \n                    switch (res.statusCode) {\n                        case 301: // Permanent redirect\n                        case 302: // Temporary redirect\n                            if (newOptions.method === 'POST' || newOptions.method === 'PUT') {\n                                newOptions.method = 'GET';\n                                delete newOptions.body;\n                                if (newOptions.headers) {\n                                    delete newOptions.headers['content-length'];\n                                    delete newOptions.headers['content-type'];\n                                }\n                            }\n                            break;\n                        case 303:\n                            if(newOptions.method === 'POST' || newOptions.method === 'PUT') {\n                            newOptions.method = 'GET';\n                            delete newOptions.body;\n                            if (newOptions.headers) {\n                                delete newOptions.headers['content-length'];\n                                delete newOptions.headers['content-type'];\n                            }\n                            }\n                            break;\n                        case 307: // Temporary redirect\n                        case 308: // Permanent redirect\n                            break;\n                    }\n\n                    if (!newUrl.host) {\n                        newUrl.host = fullUrl.host;\n                        newUrl.protocol = fullUrl.protocol;\n                    }\n\n                    if (res.headers['set-cookie']) {\n                        if (!newOptions.headers) newOptions.headers = {};\n                        const currentCookies = newOptions.headers.cookie || '';\n                        const newCookies = res.headers['set-cookie'].map(cookie => cookie.split(';')[0]).join('; ');\n                        newOptions.headers['Cookie'] = currentCookies ? `${currentCookies}; ${newCookies}` : newCookies;\n                    }\n\n\n                    try {\n                        const redirectResponse = await this.request<T, B>(\n                            newOptions,\n                            currentRedirects + 1,\n                            attempt,\n                            visitedUrls\n                        );\n                        resolve(redirectResponse);\n                    } catch (error) {\n                        this.emit('error', new ErrorHandler({\n                            statusCode: 310,\n                            message: `Redirect failed: ${(error as ErrorHandler).message}`,\n                            name: 'Request',\n                            requestOptions: options,\n                        }));\n                        reject(new ErrorHandler({\n                            statusCode: 310,\n                            message: `Redirect failed: ${(error as ErrorHandler).message}`,\n                            name: 'Request',\n                            requestOptions: options,\n                        }));\n                    }\n                    return;\n                }\n\n\n                if (options?.responseType === 'json') {\n                    try {\n                        responseData = JSON.parse(rawData.toString(options.responseEncoding || 'utf8'));\n                    } catch (e) {\n                        responseData = rawData.toString(options.responseEncoding || 'utf8');\n                    }\n                } else if (options?.responseType === 'text') {\n                    responseData = rawData.toString(options.responseEncoding || 'utf8');\n                } else if (options?.responseType === 'blob') {\n                    responseData = rawData;\n                } else if (options?.responseType === 'arrayBuffer') {\n                    responseData = Buffer.from(rawData);\n                } else if (options?.responseType === 'document') {\n                    responseData = rawData.toString(options.responseEncoding || 'utf8');\n                }\n\n                if (!validateStatus(res.statusCode || 0)) {\n                    this.emit('error', new ErrorHandler({\n                        statusCode: res.statusCode || 0,\n                        message: `Request failed with status code ${res.statusCode}`,\n                        name: 'Request',\n                        requestOptions: options,\n                    }));\n                    reject(new ErrorHandler({\n                        statusCode: res.statusCode || 0,\n                        message: `Request failed with status code ${res.statusCode}`,\n                        name: 'Request',\n                        requestOptions: options,\n                    }));\n                    return;\n                }\n\n                var response: HttpResponse<T, BodyFromSchema<B,RequestOptions>> = {\n                    request: req,\n                    response: res,\n                    headers: res.headers as Record<string, string | string[]>,\n                    config: options as RequestOptions<BodyFromSchema<B,RequestOptions>>,\n                    requestInfo: {\n                        requestId: options?.requestId || '',\n                        method: options?.method,\n                        url: options?.url,\n                        fullUrl: fullUrl.href,\n                        headers: options?.headers || {},\n                        body: options?.body,\n                        httpVersion: res.httpVersion,\n                        startTimestamp,\n                        timeout: options?.timeout,\n                        contentLength: dataString ? Buffer.byteLength(dataString) : 0,\n                    },\n                    requestId: options?.requestId || '',\n                    body: responseData,\n                    statusCode: res.statusCode!,\n                    statusText: res.statusMessage || '',\n                    timestamp: {\n                        startTimestamp,\n                        endTimestamp: endTime,\n                    },\n                    responseTime,\n                    responseSize,\n                    serverIp,\n                    connectionReused: connectionReused || false,\n                    isStream: false,\n                    isCached: false,\n                };\n\n                if (options.cache) {\n                    cacheStore.set(cacheKey, {\n                      response,\n                      expiry: Date.now() + (options.cacheTTL ?? 60000),\n                    });\n                  }\n                \n                if (!options?.defaultMode) {\n                var returnOnResponse = onResponse(response);\n                if (returnOnResponse) response = returnOnResponse;\n                var returnApplyOnResponse = this.pluginManager?.applyOnResponse(response);\n                if (this.pluginManager && returnApplyOnResponse) response = returnApplyOnResponse;\n                this.emit('afterResponse', response);\n                };\n                resolve(response);\n            });\n        }\n        });\n\n        req.on('error', (err) => {\n            if (options?.retries && attempt <= options.retries && (options.onRetry?.(req,err) ?? true)) {\n                var delay = options.retryDelay || 1000;\n                setTimeout(() => {\n                    new Core().request<T, B>(options, currentRedirects, attempt + 1);\n                    }, delay);\n              } else {\n                this.emit('error', new ErrorHandler({\n                    statusCode: 500,\n                    message: err.message,\n                    name: 'Request',\n                    requestOptions: options,\n                }));\n            reject(new ErrorHandler({\n                statusCode: 500,\n                message: err.message,\n                name: 'Request',\n                requestOptions: options,\n            }));\n        };\n        });\n\n        if (options?.signal) {\n            options.signal.addEventListener('abort', () => {\n                req.destroy();\n                this.emit('error', new ErrorHandler({\n                    statusCode: 499,\n                    message: 'Request cancelled',\n                    name: 'Request',\n                    requestOptions: options,\n                }));\n                reject(new ErrorHandler({\n                    statusCode: 499,\n                    message: 'Request cancelled',\n                    name: 'Request',\n                    requestOptions: options,\n                }));\n            });\n        }\n\n        req.setTimeout(options?.timeout || 0, () => {\n            onTimeout();\n            req.destroy();\n            this.emit('error', new ErrorHandler({\n                statusCode: 408,\n                message: options?.timeoutErrorMessage || 'Timeout exceeded',\n                name: 'Request',\n                requestOptions: options,\n            }));\n            reject(new ErrorHandler({\n                statusCode: 408,\n                message: options?.timeoutErrorMessage || 'Timeout exceeded',\n                name: 'Request',\n                requestOptions: options,\n            }));\n        });\n\n        if (dataString) {\n            req.write(dataString);\n        }\n\n        req.end();\n    });\n}\n\n\n\n};\n\nexport default Core;\nexport {\n    RequestInfo,\n    RequestOptions,\n    HttpResponse,\n    Headers,\n    ProxyOptions,\n    AuthOptions,\n    InferBodySchema,\n    BodyFromSchema,\n    Events,\n    QueueOptions,\n    PaginationOptions\n};\n","{\n  \"name\": \"nyro\",\n  \"version\": \"2.0.0\",\n  \"main\": \"./dist/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"typings\": \"./dist/index.d.ts\",\n  \"module\": \"./dist/index.mjs\",\n  \"description\": \"A simple and effective promise-based HTTP & HTTP/2 request library that supports all HTTP methods.\",\n  \"scripts\": {\n    \"test\": \"ts-node test.ts\",\n    \"build\": \"tsup\"\n  },\n  \"keywords\": [\n    \"http\",\n    \"https\",\n    \"request\",\n    \"response\",\n    \"proxy\",\n    \"fastgate\",\n    \"agent\",\n    \"http-proxy-agent\",\n    \"https-proxy-agent\",\n    \"get\",\n    \"post\",\n    \"put\",\n    \"delete\",\n    \"head\",\n    \"options\",\n    \"trace\",\n    \"connect\",\n    \"patch\",\n    \"promise\",\n    \"got\",\n    \"url\",\n    \"uri\",\n    \"simple\",\n    \"curl\",\n    \"wget\",\n    \"request-promise\",\n    \"request-promise-native\",\n    \"net\",\n    \"network\",\n    \"gzip\",\n    \"node-fetch\",\n    \"fetch\",\n    \"ky\",\n    \"requests\",\n    \"human-friendly\",\n    \"axios\",\n    \"superagent\",\n    \"hercai\",\n    \"proxy-agent\",\n    \"http-proxy\",\n    \"https-proxy\",\n    \"http-proxy-agent\",\n    \"https-proxy-agent\",\n    \"socks-proxy-agent\",\n    \"http2\",\n    \"http2-wrapper\",\n    \"http2-agent\",\n    \"http2-proxy-agent\",\n    \"user-agent\",\n    \"cookie\",\n    \"cookies\",\n    \"user-agent-generator\",\n    \"layer7\"\n  ],\n  \"author\": {\n    \"name\": \"Bes-js\",\n    \"url\": \"https://github.com/Bes-js\"\n  },\n  \"homepage\": \"https://github.com/Bes-js/nyro\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/Bes-js/nyro.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/Bes-js/nyro/issues\"\n  },\n  \"funding\": {\n    \"type\": \"github\",\n    \"url\": \"https://github.com/sponsors/Bes-js\"\n  },\n  \"license\": \"LGPL-3.0-or-later\",\n  \"devDependencies\": {\n    \"ts-node\": \"^10.9.2\",\n    \"tsup\": \"^8.3.0\"\n  },\n  \"dependencies\": {\n    \"fastgate\": \"^6.1.0\",\n    \"http\": \"^0.0.1-security\",\n    \"http-proxy-agent\": \"^7.0.2\",\n    \"http2-wrapper\": \"^2.2.1\",\n    \"https\": \"^1.0.0\",\n    \"https-proxy-agent\": \"^7.0.5\",\n    \"socks-proxy-agent\": \"^8.0.4\"\n  }\n}\n","import packageJson from '../../package.json'; \n\n/**\n * @file Utility functions for handling HTTP responses and system information.\n */\n\nimport { IncomingMessage } from 'http';\nimport os from 'os';\n\n/**\n * Checks if the socket used for the response was reused.\n * \n * @param res - The HTTP response object.\n * @returns A boolean indicating if the socket was reused, or undefined if the information is not available.\n */\nexport function getReusedSocket(res: any): boolean | undefined {\n    return res?.reusedSocket;\n};\n\n/**\n * Retrieves the IP address of the server from the HTTP response.\n * \n * @param res - The HTTP response object.\n * @returns The server's IP address as a string, or undefined if the information is not available.\n */\nexport function getServerIp(res: IncomingMessage): string | undefined {\n    const socket = res?.socket || res?.connection;\n    return socket ? socket.remoteAddress : undefined;\n};\n\n/**\n * Generates a default User-Agent string based on the current system's platform, architecture, and Node.js version.\n * \n * @returns A string representing the default User-Agent.\n */\nexport function getDefaultUserAgent(): string {\n    const platform = os.platform();\n    const arch = os.arch();\n    const nodeVersion = process.version;\n\n    return `Nyro/${packageJson.version} (${platform}; ${arch} ${nodeVersion})`;\n};\n\n/**\n * Generates a unique ID based on the current timestamp and a random number.\n * \n * @returns A unique ID string.\n * @example generateUniqueId() // 'id-1633456789000-123456'\n */\nexport function generateUniqueId(): string {\n    return 'nyro-' + Date.now() + '-' + Math.floor(Math.random() * 1000000);\n};","/**\n * Combines a base URL with a relative URL, ensuring that there is exactly one slash between them.\n *\n * @param baseUrl - The base URL to which the relative URL will be appended.\n * @param url - The relative URL to append to the base URL.\n * @param path - The path to append to the combined URL.\n * @returns The combined URL as a string.\n */\nfunction combineUrl(baseUrl: string, url: string, path: string): string {\n  var fullUrl = `${baseUrl || ''}${url || ''}${path || ''}`;\n\n    if (fullUrl.trim().endsWith('/')) fullUrl = fullUrl.slice(0,-1);\n    \n    return fullUrl;\n};\n\nexport default combineUrl;","\n/**\n * Object containing the status text for each HTTP status code.\n */\n  const StatusText: { [key: string]: string } = {\n    '100': 'Continue',\n    '101': 'Switching Protocols',\n    '102': 'Processing',\n    '103': 'Early Hints',\n    '200': 'OK',\n    '201': 'Created',\n    '202': 'Accepted',\n    '203': 'Non-Authoritative Information',\n    '204': 'No Content',\n    '205': 'Reset Content',\n    '206': 'Partial Content',\n    '207': 'Multi-Status',\n    '208': 'Already Reported',\n    '226': 'IM Used',\n    '300': 'Multiple Choices',\n    '301': 'Moved Permanently',\n    '302': 'Found',\n    '303': 'See Other',\n    '304': 'Not Modified',\n    '305': 'Use Proxy',\n    '306': 'Unused',\n    '307': 'Temporary Redirect',\n    '308': 'Permanent Redirect',\n    '309': 'Resume Incomplete',\n    '310': 'Too Many Redirects',\n    '311': 'Blocked by Windows Parental Controls',\n    '312': 'Redirect',\n    '313': 'Redirect Method',\n    '314': 'Requested URI Too Long',\n    '315': 'Moved Temporarily',\n    '316': 'Switch Proxy',\n    '317': 'Switch Redirect',\n    '400': 'Bad Request',\n    '401': 'Unauthorized',\n    '402': 'Payment Required',\n    '403': 'Forbidden',\n    '404': 'Not Found',\n    '405': 'Method Not Allowed',\n    '406': 'Not Acceptable',\n    '407': 'Proxy Authentication Required',\n    '408': 'Request Timeout',\n    '409': 'Conflict',\n    '410': 'Gone',\n    '411': 'Length Required',\n    '412': 'Precondition Failed',\n    '413': 'Payload Too Large',\n    '414': 'URI Too Long',\n    '415': 'Unsupported Media Type',\n    '416': 'Range Not Satisfiable',\n    '417': 'Expectation Failed',\n    '418': 'I\\'m a teapot',\n    '421': 'Misdirected Request',\n    '422': 'Unprocessable Entity',\n    '423': 'Locked',\n    '424': 'Failed Dependency',\n    '425': 'Too Early',\n    '426': 'Upgrade Required',\n    '428': 'Precondition Required',\n    '429': 'Too Many Requests',\n    '431': 'Request Header Fields Too Large',\n    '451': 'Unavailable For Legal Reasons',\n    '500': 'Internal Server Error',\n    '501': 'Not Implemented',\n    '502': 'Bad Gateway',\n    '503': 'Service Unavailable',\n    '504': 'Gateway Timeout',\n    '505': 'HTTP Version Not Supported',\n    '506': 'Variant Also Negotiates',\n    '507': 'Insufficient Storage',\n    '508': 'Loop Detected',\n    '510': 'Not Extended',\n    '511': 'Network Authentication Required',\n    'unknown': 'Unknown Error',\n  };\n\n\n/**\n * Interface representing the options for handling errors.\n * \n * @interface ErrorHandlerOptions\n * \n * @property {string} message - The error message to be displayed.\n * @property {any} [requestOptions] - Optional request options associated with the error.\n * @property {number} statusCode - The HTTP status code associated with the error.\n * @property {string} name - The name of the error.\n * @property {Error} [error] - Optional original error object.\n */\nexport interface NyroErrorInterface {\n    message: string;\n    requestOptions?: any;\n    statusCode: number;\n    name: string;\n    error?: Error;\n};\n\n/** \n* Interface representing the error response object.\n* \n* @interface NyroErrorResponse\n* \n* @property {string} message - The error message to be displayed.\n* @property {any} [requestOptions] - Optional request options associated with the error.\n* @property {string} [statusText] - The status text associated with the error.\n* @property {number} statusCode - The HTTP status code associated with the error.\n* @property {string} name - The name of the error.\n* @property {Error} [error] - Optional original error object.\n*/\nexport interface NyroErrorResponse {\n    message: string;\n    requestOptions?: any;\n    statusText?: string;\n    statusCode: number;\n    name: string;\n    error?: Error;\n};\n\n\nexport function isNyroError(error: any): error is ErrorHandler {\n    return error instanceof ErrorHandler;\n};\n\n\nexport default class ErrorHandler extends Error {\n    requestOptions?: any;\n    statusText?: string;\n    statusCode: number;\n    constructor(errorHandlerOptions: NyroErrorInterface) {\n        super(errorHandlerOptions.message);\n        this.name = 'NyroError';\n        this.statusText = StatusText[errorHandlerOptions.statusCode] || StatusText['unknown'];\n        this.requestOptions = errorHandlerOptions.requestOptions;\n        this.statusCode = errorHandlerOptions.statusCode;\n        this.stack = errorHandlerOptions.error?.stack;\n    }\n}","import { RequestOptions, HttpResponse } from './engine';\nimport ErrorHandler from '../helpers/errorHandler';\n\nexport interface Plugin {\n    name: string;\n    onRequest?: <B>(options: RequestOptions<B>) => RequestOptions<B> | void;\n    onResponse?: <T,B>(response: HttpResponse<T,B>) => HttpResponse<T,B> | void;\n    onError?: (error: ErrorHandler) => ErrorHandler | void;\n}\n\nexport default class PluginManager {\n    private plugins: Plugin[] = [];\n\n    use(plugin: Plugin, notification?: boolean): void {\n        if(!plugin.name) throw new Error('Plugin must have a name.');\n        if(this.plugins.find(p => p.name === plugin.name)) throw new Error(`Plugin with name \"${plugin.name}\" already exists.`);\n        if(!plugin.onRequest && !plugin.onResponse && !plugin.onError) throw new Error('Plugin must have at least one method.');\n        if(plugin.onRequest && typeof plugin.onRequest !== 'function') throw new Error('onRequest must be a function.');\n        if(plugin.onResponse && typeof plugin.onResponse !== 'function') throw new Error('onResponse must be a function.');\n        if(plugin.onError && typeof plugin.onError !== 'function') throw new Error('onError must be a function.');\n        if(notification === undefined) notification = true;\n        if(notification) console.log(\n           `\\x1b[95;5;5mPlugin\\x1b[0m \\x1b[38;5;119m'${plugin.name}'\\x1b[0m \\x1b[95;5;5mhas been successfully loaded and activated.\\x1b[0m`\n        );\n\n        this.plugins.push(plugin);\n    };\n\n    applyOnRequest<B>(options: RequestOptions<B>): RequestOptions<B> {\n        for (const plugin of this.plugins) {\n            if (plugin.onRequest) {\n                options = plugin.onRequest(options) || options;\n            }\n        }\n        return options;\n    }\n\n    applyOnResponse<T,B>(response: HttpResponse<T,B>): HttpResponse<T,B> {\n        for (const plugin of this.plugins) {\n            if (plugin.onResponse) {\n                response = plugin.onResponse(response) || response;\n            }\n        }\n        return response;\n    }\n\n    applyOnError(error: ErrorHandler): ErrorHandler {\n        for (const plugin of this.plugins) {\n            if (plugin.onError) {\n                error = plugin.onError(error) || error;\n            }\n        }\n        return error;\n    }\n\n};"," /**\n * @file /Users/berkanx/Desktop/Projects/requester/src/helpers/types.ts\n * @description This file contains various TypeScript enums used for HTTP request and response handling.\n */\n\n\n export interface Headers {\n  'User-Agent'?: string;\n  'Response-Type'?: string;\n  'Content-Encoding'?: string;\n  'Content-Length'?: string;\n  'Content-Range'?: string;\n  'Content-Type'?: string;\n  'Authorization'?: string;\n  'Accept'?: string;\n  'Accept-Encoding'?: string;\n  'Accept-Language'?: string;\n  'Cache-Control'?: string;\n  'Connection'?: string;\n  'Cookie'?: string;\n  'DNT'?: string;\n  'Host'?: string;\n  'Origin'?: string;\n  'Pragma'?: string;\n  'Referer'?: string;\n  'TE'?: string;\n  'Upgrade-Insecure-Requests'?: string;\n  'Via'?: string;\n  'Warning'?: string;\n  'X-Requested-With'?: string;\n  'X-Forwarded-For'?: string;\n  'X-Forwarded-Host'?: string;\n  'X-Forwarded-Proto'?: string;\n  'Front-End-Https'?: string;\n  'X-Http-Method-Override'?: string;\n  'X-ATT-DeviceId'?: string;\n  'X-Wap-Profile'?: string;\n  'Proxy-Connection'?: string;\n  'X-UIDH'?: string;\n  'X-Csrf-Token'?: string;\n  'X-Request-ID'?: string;\n  'X-Correlation-ID'?: string;\n  'X-DeviceUserAgent'?: string;\n  'X-Device-ID'?: string;\n  'X-Device-OS'?: string;\n  'X-Device-OS-Version'?: string;\n  'X-Device-Model'?: string;\n  'X-Device-Brand'?: string;\n  'X-Device-Name'?: string;\n  'X-Device-Carrier'?: string;\n  'X-Device-Country'?: string;\n  'X-Device-Locale'?: string;\n  'X-Device-App'?: string;\n  'X-Device-App-Version'?: string;\n  'X-Device-App-Name'?: string;\n  'X-Device-App-Installer'?: string;\n  'X-Device-App-Install-Time'?: string;\n  'X-Device-App-Update-Time'?: string;\n  'X-Device-App-Store'?: string;\n  'X-Device-App-Store-Version'?: string;\n  'X-Device-App-Store-Name'?: string;\n};\n\n\n export type UserAgentDevice = ('SM-T210' | 'SM-G900F' | 'SM-G920F' | 'SM-G930F' | 'SM-G950F' | 'SM-G960F' | 'SM-G970F' | 'SM-G973F' | 'SM-G975F' | 'SM-G980F' | 'SM-G985F' | 'SM-G988B' | 'SM-N9005' | 'SM-N910F' | 'SM-N920C' | 'SM-N950F' | 'SM-N960F' | 'SM-N970F' | 'SM-N975F' | 'SM-N980F' | 'SM-N985F' | 'SM-N986B' | 'iPhone' | 'iPad' | 'iPod touch' | 'Nexus 5' | 'Nexus 7' | 'Nexus 10' | 'Nexus 4' | 'Nexus 6' | 'Nexus 9' | 'Nexus 5X' | 'Nexus 6P' | 'Nexus 7 (2013)' | 'Nexus 9 (2014)' | 'Nexus 10 (2012)' | 'Nexus 4 (2012)' | 'Nexus 6 (2014)' | 'Nexus 5X (2015)' | 'Nexus 6P (2015)' | 'Mi 9' | 'Mi 9 SE' | 'Mi 9T' | 'Mi 9T Pro' | 'Mi 10' | 'Mi 10 Pro' | 'Mi 10T' | 'Mi 10T Pro' | 'Mi 11' | 'Mi 11 Lite' | 'Mi 11 Ultra' | 'Redmi Note 8' | 'Redmi Note 8 Pro' | 'Redmi Note 9' | 'Redmi Note 9 Pro' | 'Redmi Note 10' | 'Redmi Note 10 Pro' | 'Redmi Note 11' | 'Redmi Note 11 Pro' | 'Poco F1' | 'Poco F2 Pro' | 'Poco X3' | 'Poco X3 Pro' | 'Poco M3' | 'Poco M3 Pro' & Record<string,string>);\n\n export type UserAgentOS = ('Windows' | 'Mac OS' | 'Linux' | 'Android' | 'iOS' & string);\n\n export type UserAgentBrowser = ('Chrome' | 'Firefox' | 'Safari' | 'Opera' | 'Edge' | 'IE' & Record<string,string>);\n\n\n export interface GenerateUserAgentOptions {\n    browser?: (UserAgentBrowser & string);\n    version?: string;\n    os?: (UserAgentOS & string);\n    device?: (UserAgentDevice);\n };\n\n\n\n/**\n * @enum {string} Method\n * @description Enum representing HTTP methods.\n * @property {string} Get - HTTP GET method.\n * @property {string} Post - HTTP POST method.\n * @property {string} Put - HTTP PUT method.\n * @property {string} Patch - HTTP PATCH method.\n * @property {string} Delete - HTTP DELETE method.\n * @property {string} Head - HTTP HEAD method.\n * @property {string} Options - HTTP OPTIONS method.\n * @property {string} Connect - HTTP CONNECT method.\n * @property {string} Trace - HTTP TRACE method.\n */\n export enum Method {\n    Get = 'GET',\n    Post = 'POST',\n    Put = 'PUT',\n    Patch = 'PATCH',\n    Delete = 'DELETE',\n    Head = 'HEAD',\n    Options = 'OPTIONS',\n    Connect = 'CONNECT',\n    Trace = 'TRACE',\n  };\n\n\n  /**\n * @enum {string} ResponseEncoding\n * @description Enum representing possible response encodings.\n * @property {string} Utf8 - UTF-8 encoding.\n * @property {string} Ascii - ASCII encoding.\n * @property {string} Base64 - Base64 encoding.\n * @property {string} Hex - Hexadecimal encoding.\n * @property {string} Latin1 - Latin-1 encoding.\n * @property {string} Binary - Binary encoding.\n * @property {string} Utf16Le - UTF-16 Little Endian encoding.\n * @property {string} Utf16Le2 - UTF-16 Little Endian encoding (alternative).\n * @property {string} Ucs2 - UCS-2 encoding.\n * @property {string} Ucs22 - UCS-2 encoding (alternative).\n * @property {string} Base64Url - Base64 URL encoding.\n */\n export enum ResponseEncoding {\n    Utf8 = 'utf8',\n    Ascii = 'ascii',\n    Base64 = 'base64',\n    Hex = 'hex',\n    Latin1 = 'latin1',\n    Binary = 'binary',\n    Utf16Le = 'utf16le',\n    Utf16Le2 = 'utf-16le',\n    Ucs2 = 'ucs2',\n    Ucs22 = 'ucs-2',\n    Base64Url = 'base64url',\n  };\n\n  \n/**\n * @enum {string} ContentType\n * @description Enum representing possible content types for HTTP requests.\n * @property {string} Json - application/json content type.\n * @property {string} Xml - application/xml content type.\n * @property {string} UrlEncoded - application/x-www-form-urlencoded content type.\n * @property {string} FormData - multipart/form-data content type.\n * @property {string} Text - text/plain content type.\n * @property {string} OctetStream - application/octet-stream content type.\n * @property {string} Default - Default content type (application/json).\n */\n  export enum ContentType {\n    Json = 'application/json',\n    Xml = 'application/xml',\n    UrlEncoded = 'application/x-www-form-urlencoded',\n    FormData = 'multipart/form-data',\n    Text = 'text/plain',\n    OctetStream = 'application/octet-stream',\n    Default = 'application/json',\n  };\n\n\n  /**\n * @enum {string} ResponseType\n * @description Enum representing possible response types.\n * @property {string} Json - JSON response type.\n * @property {string} Text - Text response type.\n * @property {string} Blob - Blob response type.\n * @property {string} Stream - Stream response type.\n * @property {string} ArrayBuffer - ArrayBuffer response type.\n * @property {string} Document - Document response type.\n * @property {string} Default - Default response type (json).\n */\n export enum ResponseType {\n    Json = 'json',\n    Text = 'text',\n    Blob = 'blob',\n    Stream = 'stream',\n    ArrayBuffer = 'arrayBuffer',\n    Document = 'document',\n    Default = 'json',\n  };\n\n\n  /**\n * @enum {number} StatusCode\n * @description Enum representing HTTP status codes.\n * @property {number} Continue - 100 Continue.\n * @property {number} SwitchingProtocols - 101 Switching Protocols.\n * @property {number} Processing - 102 Processing.\n * @property {number} EarlyHints - 103 Early Hints.\n * @property {number} Ok - 200 OK.\n * @property {number} Created - 201 Created.\n * @property {number} Accepted - 202 Accepted.\n * @property {number} NonAuthoritativeInformation - 203 Non-Authoritative Information.\n * @property {number} NoContent - 204 No Content.\n * @property {number} ResetContent - 205 Reset Content.\n * @property {number} PartialContent - 206 Partial Content.\n * @property {number} MultiStatus - 207 Multi-Status.\n * @property {number} AlreadyReported - 208 Already Reported.\n * @property {number} ImUsed - 226 IM Used.\n * @property {number} MultipleChoices - 300 Multiple Choices.\n * @property {number} MovedPermanently - 301 Moved Permanently.\n * @property {number} Found - 302 Found.\n * @property {number} SeeOther - 303 See Other.\n * @property {number} NotModified - 304 Not Modified.\n * @property {number} UseProxy - 305 Use Proxy.\n * @property {number} Unused - 306 Unused.\n * @property {number} TemporaryRedirect - 307 Temporary Redirect.\n * @property {number} PermanentRedirect - 308 Permanent Redirect.\n * @property {number} BadRequest - 400 Bad Request.\n * @property {number} Unauthorized - 401 Unauthorized.\n * @property {number} PaymentRequired - 402 Payment Required.\n * @property {number} Forbidden - 403 Forbidden.\n * @property {number} NotFound - 404 Not Found.\n * @property {number} MethodNotAllowed - 405 Method Not Allowed.\n * @property {number} NotAcceptable - 406 Not Acceptable.\n * @property {number} ProxyAuthenticationRequired - 407 Proxy Authentication Required.\n * @property {number} RequestTimeout - 408 Request Timeout.\n * @property {number} Conflict - 409 Conflict.\n * @property {number} Gone - 410 Gone.\n * @property {number} LengthRequired - 411 Length Required.\n * @property {number} PreconditionFailed - 412 Precondition Failed.\n * @property {number} PayloadTooLarge - 413 Payload Too Large.\n * @property {number} UriTooLong - 414 URI Too Long.\n * @property {number} UnsupportedMediaType - 415 Unsupported Media Type.\n * @property {number} RangeNotSatisfiable - 416 Range Not Satisfiable.\n * @property {number} ExpectationFailed - 417 Expectation Failed.\n * @property {number} ImATeapot - 418 I'm a teapot.\n * @property {number} MisdirectedRequest - 421 Misdirected Request.\n * @property {number} UnprocessableEntity - 422 Unprocessable Entity.\n * @property {number} Locked - 423 Locked.\n * @property {number} FailedDependency - 424 Failed Dependency.\n * @property {number} TooEarly - 425 Too Early.\n * @property {number} UpgradeRequired - 426 Upgrade Required.\n * @property {number} PreconditionRequired - 428 Precondition Required.\n * @property {number} TooManyRequests - 429 Too Many Requests.\n * @property {number} RequestHeaderFieldsTooLarge - 431 Request Header Fields Too Large.\n * @property {number} UnavailableForLegalReasons - 451 Unavailable For Legal Reasons.\n * @property {number} InternalServerError - 500 Internal Server Error.\n * @property {number} NotImplemented - 501 Not Implemented.\n * @property {number} BadGateway - 502 Bad Gateway.\n * @property {number} ServiceUnavailable - 503 Service Unavailable.\n * @property {number} GatewayTimeout - 504 Gateway Timeout.\n * @property {number} HttpVersionNotSupported - 505 HTTP Version Not Supported.\n * @property {number} VariantAlsoNegotiates - 506 Variant Also Negotiates.\n * @property {number} InsufficientStorage - 507 Insufficient Storage.\n * @property {number} LoopDetected - 508 Loop Detected.\n * @property {number} NotExtended - 510 Not Extended.\n * @property {number} NetworkAuthenticationRequired - 511 Network Authentication Required.\n */\n  export enum StatusCode {\n    Continue = 100,\n    SwitchingProtocols = 101,\n    Processing = 102,\n    EarlyHints = 103,\n    Ok = 200,\n    Created = 201,\n    Accepted = 202,\n    NonAuthoritativeInformation = 203,\n    NoContent = 204,\n    ResetContent = 205,\n    PartialContent = 206,\n    MultiStatus = 207,\n    AlreadyReported = 208,\n    ImUsed = 226,\n    MultipleChoices = 300,\n    MovedPermanently = 301,\n    Found = 302,\n    SeeOther = 303,\n    NotModified = 304,\n    UseProxy = 305,\n    Unused = 306,\n    TemporaryRedirect = 307,\n    PermanentRedirect = 308,\n    TooManyRedirects = 310,\n    BadRequest = 400,\n    Unauthorized = 401,\n    PaymentRequired = 402,\n    Forbidden = 403,\n    NotFound = 404,\n    MethodNotAllowed = 405,\n    NotAcceptable = 406,\n    ProxyAuthenticationRequired = 407,\n    RequestTimeout = 408,\n    Conflict = 409,\n    Gone = 410,\n    LengthRequired = 411,\n    PreconditionFailed = 412,\n    PayloadTooLarge = 413,\n    UriTooLong = 414,\n    UnsupportedMediaType = 415,\n    RangeNotSatisfiable = 416,\n    ExpectationFailed = 417,\n    ImATeapot = 418,\n    MisdirectedRequest = 421,\n    UnprocessableEntity = 422,\n    Locked = 423,\n    FailedDependency = 424,\n    TooEarly = 425,\n    UpgradeRequired = 426,\n    PreconditionRequired = 428,\n    TooManyRequests = 429,\n    RequestHeaderFieldsTooLarge = 431,\n    UnavailableForLegalReasons = 451,\n    InternalServerError = 500,\n    NotImplemented = 501,\n    BadGateway = 502,\n    ServiceUnavailable = 503,\n    GatewayTimeout = 504,\n    HttpVersionNotSupported = 505,\n    VariantAlsoNegotiates = 506,\n    InsufficientStorage = 507,\n    LoopDetected = 508,\n    NotExtended = 510,\n    NetworkAuthenticationRequired = 511,\n  };","import { Headers as HeadersInterface } from './engine';\n\nexport default class Headers {\n    private headers: (HeadersInterface & Record<string,string>) = { };\n\n    public constructor(headers?: HeadersInterface) {\n        if (headers) {\n            this.setFromObject(headers);\n        }\n    }\n\n    public toJSON(): { [key: string]: string } {\n        return this.headers;\n    };\n\n    public set(key: (keyof HeadersInterface & string), value: string): this {\n        if (!this.headers[key]) {\n            this.headers[key] = value;\n        }\n        return this;\n    }\n\n    public get(key: (keyof HeadersInterface & string)): string | undefined {\n        return this.headers[key];\n    }\n\n    public delete(key: (keyof HeadersInterface & string)): this {\n        delete this.headers[key];\n        return this;\n    }\n\n    public all(): HeadersInterface {\n        return this.headers;\n    }\n\n    public clear(): this {\n        this.headers = {};\n        return this;\n    }\n\n    public has(key: (keyof HeadersInterface & string)): boolean {\n        return this.headers.hasOwnProperty(key);\n    }\n\n    public setFromObject(headers: HeadersInterface): this {\n        this.headers = { ...this.headers, ...headers };\n        return this;\n    }\n\n    public setFromHeaders(headers: Headers): this {\n        this.setFromObject(headers.all());\n        return this;\n    }\n\n    public setUserAgent(userAgent: string): this {\n        return this.set('User-Agent', userAgent);\n    }\n\n    public setContentType(contentType: string): this {\n        return this.set('Content-Type', contentType);\n    }\n\n    public setAccept(accept: string): this {\n        return this.set('Accept', accept);\n    }\n\n    public setAuthorization(authorization: string): this {\n        return this.set('Authorization', authorization);\n    }\n\n    public setBearerToken(token: string): this {\n        return this.setAuthorization(`Bearer ${token}`);\n    }\n\n    public setBasicAuth(username: string, password: string): this {\n        return this.setAuthorization(`Basic ${Buffer.from(`${username}:${password}`).toString('base64')}`);\n    }\n\n    public setBearerAuth(token: string): this {\n        return this.setAuthorization(`Bearer ${token}`);\n    }\n\n    public setReferer(referer: string): this {\n        return this.set('Referer', referer);\n    }\n\n    public setOrigin(origin: string): this {\n        return this.set('Origin', origin);\n    }\n\n    public setHost(host: string): this {\n        return this.set('Host', host);\n    }\n\n    public setConnection(connection: string): this {\n        return this.set('Connection', connection);\n    }\n\n    public setAcceptEncoding(acceptEncoding: string): this {\n        return this.set('Accept-Encoding', acceptEncoding);\n    }\n\n    public setAcceptLanguage(acceptLanguage: string): this {\n        return this.set('Accept-Language', acceptLanguage);\n    }\n\n    public setResponseType(responseType: string): this {\n        return this.set('Response-Type', responseType);\n    }\n\n    public setCacheControl(cacheControl: string): this {\n        return this.set('Cache-Control', cacheControl);\n    }\n\n    public setCookie(cookie: string): this {\n        return this.set('Cookie', cookie);\n    }\n\n    public setDNT(dnt: string): this {\n        return this.set('DNT', dnt);\n    }\n\n    public setPragma(pragma: string): this {\n        return this.set('Pragma', pragma);\n    }\n}","import { \n    RequestOptions as RequestInterface,\n    Headers as HeadersInterface,\n    AuthOptions as AuthInterface,\n    ProxyOptions as ProxyInterface,\n    } from './engine';\nimport { ResponseEncoding } from '../helpers/types';\n\nexport default class Options {\n    private options: RequestInterface = { };\n\n    public constructor(options?: RequestInterface) {\n    }\n\n    public toJSON(): RequestInterface {\n        return this.options;\n    };\n\n    public set(key: (keyof RequestInterface & string), value: any): this {\n        if (!this.options[key]) {\n            this.options[key] = value;\n        }\n        return this;\n    }\n\n    public get(key: (keyof RequestInterface & string)): any | undefined {\n        return this.options[key];\n    }\n\n    public delete(key: (keyof RequestInterface & string)): this {\n        delete this.options[key];\n        return this;\n    }\n\n    public all(): RequestInterface {\n        return this.options;\n    }\n\n    public clear(): this {\n        this.options = {};\n        return this;\n    }\n\n    public has(key: (keyof RequestInterface & string)): boolean {\n        return this.options.hasOwnProperty(key);\n    }\n\n    public setFromObject(options: RequestInterface): this {\n        this.options = { ...this.options, ...options };\n        return this;\n    }\n\n    public setFromOptions(options: Options): this {\n        this.setFromObject(options.all());\n        return this;\n    }\n\n    public setURL(url: string): this {\n        return this.set('url', url);\n    }\n\n    public setBaseURL(baseURL: string): this {\n        return this.set('baseURL', baseURL);\n    }\n\n    public setPath(path: string): this {\n        return this.set('path', path);\n    }\n\n    public setBodySchema(bodySchema: string): this {\n        return this.set('bodySchema', bodySchema);\n    }\n\n    public setAuth(auth: AuthInterface): this {\n        return this.set('auth', auth);\n    }\n\n    public setProxy(proxy: ProxyInterface): this {\n        return this.set('proxy', proxy);\n    }\n\n    public setMethod(method: \n        'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'HEAD' | 'OPTIONS' | 'CONNECT' | 'TRACE'\n    ): this {\n        return this.set('method', method);\n    }\n\n    public setHeaders(headers: (HeadersInterface & Record<string,string>)): this {\n        if(typeof headers !== 'object') return this;\n        return this.set('headers', (headers as any));\n    }\n\n    public setBody(body: string): this {\n        return this.set('body', body);\n    }\n\n    public setQuery(query: string): this {\n        return this.set('query', query);\n    }\n\n    public setParams(params: string): this {\n        return this.set('params', params);\n    }\n\n    public setResponseEncoding(responseEncoding: ResponseEncoding): this {\n        return this.set('responseEncoding', responseEncoding);\n    }\n\n    public setResponseType(responseType: 'json' | 'text' | 'blob' | 'stream' | 'arrayBuffer' | 'document'): this {\n        return this.set('responseType', responseType);\n    }\n\n    public setMaxRedirects(maxRedirects: number): this {\n        return this.set('maxRedirects', maxRedirects);\n    }\n\n    public setRetryDelay(retryDelay: number): this {\n        return this.set('retryDelay', retryDelay);\n    }\n\n    public setTimeout(timeout: number): this {\n        return this.set('timeout', timeout);\n    }\n\n   \n}","\n\nexport default async function checkVersion(client:any, version:string, checkUpdates:boolean): Promise<void> {\n    if(!checkUpdates) return;\n    try {\n        var { body } = await client.get(\n            `https://registry.npmjs.com/-/v1/search?text=nyro`,\n            { responseType: 'json', defaultMode: true }\n        );\n\n        var latestVersion = body.objects[0].package.version as string;\n        if(version.split('.')[0] !== latestVersion.split('.')[0]) {\n            console.log(\n                `\\r\\n\\r\\n`,\n                `\\x1b[95;5;5m\n                  =--------                                                                         \n                 =----------- ====-                                                                 \n                =====--------=======     :::::     :::.                                             \n               =======+------=======     ::...:    .::::.:      ::. :..  .:.   .::::                \n               ------=**=----=+++++=     ::.:...:  :...:.::    :..: :..::.:: :.......:              \n               -------***+---=++++++     ::.:::::: :.:. :.::  :.::  :..::  .:.::   ::.::            \n               -------*****--=++++++     ::.:  ::.::.:.  :... :.::  :.:.   :.::     ::.:            \n               -------******==*****+     ::.:   ::...::  ::.::.:.   :..:   .:.:     ::.:            \n               :::::::**************     ::.:     ::.::   .:..::    :..:    :.::::::.::             \n               :::::::+*************     .:::      :::     :..:     :..       :::::::               \n                :::::: ***********                        :..:                                      \n                          ******                         ::::\\x1b[0m`,\n                `\\r\\n\\r\\n`,\n                `\\x1b[31;1;4m You are using an outdated version of\\x1b[0m`,\n                `\\x1b[38;5;4m Nyro.\\x1b[0m \\r\\n`,\n                `\\x1b[31;1;4m Please update to the latest version\\x1b[0m`,\n                `\\x1b[38;5;119m (${latestVersion})\\x1b[0m`,\n                `\\x1b[31;1;4m by running \\x1b[0m`,\n                `\\x1b[38;5;119m ' npm install nyro@latest '\\x1b[0m`,\n                `\\r\\n\\r\\n`\n            );\n        }\n    } catch (error) { };\n};","import Proxy from 'fastgate';\nexport * from 'fastgate';\nexport default Proxy;","import {\n    GenerateUserAgentOptions,\n    UserAgentOS,\n    UserAgentBrowser,\n    UserAgentDevice,\n} from '../helpers/types';\n\nvar chromeWebkitVersions = {\n    \"1.0\": \"528\",\n    \"2.0\": \"530\",\n    \"3.0\": \"532\",\n    \"4.0\": \"532.5\",\n    \"4.1\": \"49\",\n    \"5.0\": \"533\",\n    \"6.0\": \"534.3\",\n    \"7.0\": \"534.7\",\n    \"8.0\": \"534.1\",\n    \"9.0\": \"534.13\",\n    \"10.0\": \"534.16\",\n    \"11.0\": \"534.24\",\n    \"12.0\": \"534.3\",\n    \"13.0\": \"535.1\",\n    \"14.0\": \"535.2\",\n    \"15.0\": \"535.2\",\n    \"16.0\": \"535.7\",\n    \"17.0\": \"535.11\",\n    \"18.0\": \"535.19\",\n    \"19.0\": \"536.5\",\n    \"20.0\": \"536.1\",\n    \"21.0\": \"537.1\",\n    \"22.0\": \"537.4\",\n    \"23.0\": \"537.11\",\n    \"24.0\": \"537.17\",\n    \"25.0\": \"537.22\",\n    \"26.0\": \"537.31\",\n    \"27.0\": \"537.36\"\n  };\n  var androidWebkitVersions = {\n    \"1.5\": \"528.5\",\n    \"1.6\": \"528.5\",\n    \"2.0\": \"530.17\",\n    \"2.0.1\": \"530.17\",\n    \"2.1\": \"530.17\",\n    \"2.2\": \"533.1\",\n    \"2.3\": \"?\",\n    \"2.3.3\": \"533.1\",\n    \"3.0\": \"534.13\",\n    \"3.1\": \"534.13\",\n    \"3.2\": \"534.13\",\n    \"4.0\": \"534.30\",\n    \"4.0.3\": \"534.30\",\n    \"4.1\": \"534.30\",\n    \"4.2\": \"534.30\",\n    \"4.3\": \"534.30\",\n    \"4.4\": \"537.36\"\n  };\n\n  var safariWebkitVersions = {\n    \"1.0\": \"85\",\n    \"1.0.3\": \"85.8.5\",\n    \"1.1\": \"100\",\n    \"1.2\": \"125\",\n    \"1.3\": \"312\",\n    \"1.3.1\": \"312.3\",\n    \"1.3.2\": \"312.5\",\n    \"1.3.3\": \"312.6\",\n    \"2.0\": \"412\",\n    \"2.0.2\": \"416.11\",\n    \"2.0.4\": \"419.3\",\n    \"3.0\": \"522.11\",\n    \"3.0.2\": \"522.12\",\n    \"3.0.3\": \"522.12.1\",\n    \"3.0.4\": \"523.10\",\n    \"3.1\": \"525.13\",\n    \"3.1.1\": \"525.20\",\n    \"3.1.2\": \"525.21\",\n    \"3.2\": \"525.26\",\n    \"3.2.1\": \"525.27\",\n    \"3.2.3\": \"525.28\",\n    \"4.0\": \"530.17\",\n    \"4.0.1\": \"530.18\",\n    \"4.0.2\": \"530.19\",\n    \"4.0.3\": \"531.9\",\n    \"4.0.4\": \"531.21.10\",\n    \"4.0.5\": \"531.22.7\",\n    \"4.1\": \"533.16\",\n    \"4.1.1\": \"533.17.8\",\n    \"4.1.2\": \"533.18.5\",\n    \"4.1.3\": \"533.19.4\",\n    \"5.0\": \"533.16\",\n    \"5.0.1\": \"533.17.8\",\n    \"5.0.2\": \"533.18.5\",\n    \"5.0.3\": \"533.19.4\",\n    \"5.0.4\": \"533.20.27\",\n    \"5.0.5\": \"533.21.1\",\n    \"5.0.6\": \"533.22.3\",\n    \"5.1\": \"534.48.3\",\n    \"5.1.1\": \"534.51.22\",\n    \"5.1.2\": \"534.52.7\",\n    \"5.1.3\": \"534.53.10\",\n    \"5.1.4\": \"534.54.16\",\n    \"5.1.5\": \"534.55.3\",\n    \"5.1.6\": \"534.56.5\",\n    \"5.1.7\": \"534.57.2\",\n    \"5.1.8\": \"534.58.2\",\n    \"5.1.9\": \"534.59.8\",\n    \"5.1.10\": \"534.59.10\",\n    \"6.0\": \"536.25\",\n    \"6.0.1\": \"536.26\",\n    \"6.0.2\": \"536.26.17\",\n    \"6.0.3\": \"536.28.10\",\n    \"6.0.4\": \"536.29.13\",\n    \"6.0.5\": \"536.30.1\",\n    \"6.1\": \"537.43.58\",\n    \"6.1.1\": \"537.73.11\",\n    \"6.1.6\": \"537.78.2[24]\",\n    \"6.2.8\": \"537.85.17\",\n    \"7.0\": \"537.71\",\n    \"7.0.1\": \"537.73.11\",\n    \"7.0.3\": \"537.75.14\",\n    \"7.0.4\": \"537.76.4\",\n    \"7.0.5\": \"537.77.4\",\n    \"7.0.6\": \"537.78.2\",\n    \"7.1.8\": \"537.85.17\",\n    \"8.0\": \"538.35.8\",\n    \"8.0.6\": \"600.6.3\",\n    \"8.0.7\": \"600.7.12\",\n    \"9.0\": \"601.1.56\",\n    \"9.0.1\": \"601.2.7\",\n    \"9.0.2\": \"601.3.9\",\n    \"9.0.3\": \"601.4.4\",\n    \"9.1\": \"601.5.17\",\n    \"9.1.1\": \"601.6.17\",\n    \"9.1.2\": \"601.7.1\",\n    \"9.1.3\": \"601.7.8\",\n    \"10.0\": \"602.1.50\",\n    \"10.0.1\": \"602.2.14\",\n    \"10.0.2\": \"602.3.12\",\n    \"10.0.3\": \"602.4.8\",\n    \"10.1\": \"603.1.30\",\n    \"10.1.1\": \"603.2.4\",\n    \"10.1.2\": \"603.3.8\",\n    \"11.0.0\": \"604.1.28\"\n  };\n  \n  function getRandomVersion(versions: Record<string, string>) {\n    var availableVersions = Object.keys(versions);\n    var randomIndex = Math.floor(Math.random() * availableVersions.length);\n    return versions[availableVersions[randomIndex]];\n  };\n  \n\n  function generateChrome(version?:string, os?:string, device?:string) {\n    return `Mozilla/5.0 (${os}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/${version ?? '537.36'} Safari/537.36`;\n  }\n  function generateFirefox(version?:string, os?:string, device?:string) {\n    return `Mozilla/5.0 (${os}; rv:${version ?? '537.36'}) Gecko/20100101 Firefox/${version ?? '537.36'}`;\n  }\n  function generateSafari(version?:string, os?:string, device?:string) {\n    return `Mozilla/5.0 (${os}) AppleWebKit/${version ?? '604.1.28'} (KHTML, like Gecko) Version/${version ?? '604.1.28'} Safari/${version ?? '604.1.28'}`;\n  }\n  function generateAndroid(version?:string, device?:string, buildVersion?:string) {\n    return `Mozilla/5.0 (Linux; Android ${version ?? '537.36'}; ${device} Build/${buildVersion ?? '537.36'};) AppleWebKit/${version ?? '537.36'} (KHTML, like Gecko) Version/4.0 Chrome/${version ?? '537.36'} Mobile Safari/${version ?? '537.36'}`;\n  }\n  function generateEdge(version?:string, os?:string, device?:string) {\n    return `Mozilla/5.0 (${os};) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/${version} Safari/537.36 Edge/${version}`;\n  }\n\n\n/**\n * @description Parse the type of the operating system.\n * @param {string} type - The type of the operating system.\n * @returns {string} The parsed type of the operating system.\n * @example parseType('Win') => 'Windows'\n * @example parseType('Mac') => 'Mac OS'\n * @example parseType('Linux') => 'Linux'\n * @example parseType('android') => 'Android'\n * @example parseType('IOS') => 'iOS'\n * @export parseType\n */\nfunction parseOS(type: string): UserAgentOS {\n    type = type.toLocaleLowerCase();\n    return type.startsWith('mac') ? 'Mac OS' : \n        type.startsWith('windows') || type.startsWith('win') ? 'Windows' : \n        type.startsWith('linux') ? 'Linux' : \n        type.startsWith('android') ? 'Android' : \n        type.startsWith('ios') || type.startsWith('ıos') ? 'iOS' : 'Windows';\n};\n\n\nexport default class UserAgent {\n    constructor() {\n\n    };\n\n    static getVersion(os?: UserAgentOS): string {\n        if (!os) os = this.getOS();\n\n        switch (os) {\n            case 'Windows':\n                return getRandomVersion(chromeWebkitVersions);\n            case 'Mac OS':\n                return getRandomVersion(safariWebkitVersions);\n            case 'Linux':\n                return getRandomVersion(chromeWebkitVersions);\n            case 'Android':\n                return getRandomVersion(androidWebkitVersions);\n            case 'iOS':\n                return getRandomVersion(safariWebkitVersions);\n            default:\n                return getRandomVersion(chromeWebkitVersions);\n        };\n    };\n\n    static getOS(): UserAgentOS {\n        var OSList: UserAgentOS[] = ['Windows', 'Mac OS', 'Linux', 'Android', 'iOS'];\n        return OSList[Math.floor(Math.random() * OSList.length)];\n    };\n\n    static getBrowser(): UserAgentBrowser {\n        var BrowserList: UserAgentBrowser[] = ['Chrome', 'Firefox', 'Safari', 'Opera', 'Edge'];\n        return BrowserList[Math.floor(Math.random() * BrowserList.length)];\n    };\n\n    static getDevice(): UserAgentDevice {\n        var DeviceList: UserAgentDevice[] = [\n            'SM-T210', 'SM-G900F', 'SM-G920F', 'SM-G930F', 'SM-G950F', 'SM-G960F', 'SM-G970F', 'SM-G973F', 'SM-G975F', 'SM-G980F', 'SM-G985F', 'SM-G988B', 'SM-N9005', 'SM-N910F', 'SM-N920C', 'SM-N950F', 'SM-N960F', 'SM-N970F', 'SM-N975F', 'SM-N980F', 'SM-N985F', 'SM-N986B', 'iPhone', 'iPad', 'iPod touch', 'Nexus 5', 'Nexus 7', 'Nexus 10', 'Nexus 4', 'Nexus 6', 'Nexus 9', 'Nexus 5X', 'Nexus 6P', 'Nexus 7 (2013)', 'Nexus 9 (2014)', 'Nexus 10 (2012)', 'Nexus 4 (2012)', 'Nexus 6 (2014)', 'Nexus 5X (2015)', 'Nexus 6P (2015)', 'Mi 9', 'Mi 9 SE', 'Mi 9T', 'Mi 9T Pro', 'Mi 10', 'Mi 10 Pro', 'Mi 10T', 'Mi 10T Pro', 'Mi 11', 'Mi 11 Lite', 'Mi 11 Ultra', 'Redmi Note 8', 'Redmi Note 8 Pro', 'Redmi Note 9', 'Redmi Note 9 Pro', 'Redmi Note 10', 'Redmi Note 10 Pro', 'Redmi Note 11', 'Redmi Note 11 Pro', 'Poco F1', 'Poco F2 Pro', 'Poco X3', 'Poco X3 Pro', 'Poco M3'\n        ];\n        return DeviceList[Math.floor(Math.random() * DeviceList.length)];\n    };  \n\n\n\n    static generate(options?: GenerateUserAgentOptions): string {\n        var UserAgentOptions = {} as GenerateUserAgentOptions;\n\n        if(!options) {\n            UserAgentOptions = {\n                os: this.getOS(),\n                browser: this.getBrowser(),\n                device: this.getDevice(),\n                version: this.getVersion('Windows')\n            };\n        } else {\n            var defaultBrowserList = ['Chrome', 'Firefox', 'Opera', 'Edge'];\n            var OS = parseOS(options.os || 'Windows');\n            var browser = OS == 'iOS' || OS == 'Mac OS' ? 'Safari' : defaultBrowserList[Math.floor(Math.random() * defaultBrowserList.length)] as UserAgentBrowser;\n            var version = options.version || this.getVersion(OS || 'Windows');\n\n            UserAgentOptions = {\n                os: parseOS(options?.os || 'Windows') || this.getOS(),\n                browser: options?.browser || browser,\n                device: options?.device || this.getDevice(),\n                version: version\n            };\n        };\n\n        var os = UserAgentOptions.os;\n        var parsedOS = os == 'Windows' ?\n        [\n            'Windows NT 6.1; Win64; x64',\n            'Windows NT 10.0; Win64; x64',\n            'Windows NT 6.3; Win64; x64',\n            'Windows NT 6.1; WOW64',\n            'Windows NT 10.0',\n            'Windows NT 5.1'\n        ] :\n        os == 'Mac OS' ? \n        [\n            'Macintosh; Intel Mac OS X 10_10_5',\n            'Macintosh; Intel Mac OS X 10_12_2',\n            'Macintosh; Intel Mac OS X 10_12_3',\n            'Macintosh; Intel Mac OS X 10_9_5',\n            'Macintosh; Intel Mac OS X 10_12_0',\n            'Macintosh; Intel Mac OS X 10_12_1',\n            'Macintosh; Intel Mac OS X 10_11_6'\n        ] :\n        os == 'Linux' ? \n        [\n            'X11; Ubuntu; Linux x86_64; rv:53.0',\n            'X11; Linux x86_64',\n            'X11; Linux x86_64; rv:53.0',\n            'X11; Linux x86_64; rv:52.0'\n        ] : \n        os == 'Android' ? \n        [\n            `Linux; Android 4.2.2; ${UserAgentOptions.device}`,\n            `Linux; Android 4.4; ${UserAgentOptions.device}`,\n            `Linux; Android 5.0; ${UserAgentOptions.device}`,\n            `Linux; Android 5.1; ${UserAgentOptions.device}`,\n            `Linux; Android 6.0; ${UserAgentOptions.device}`,\n            `Linux; Android 7.0; ${UserAgentOptions.device}`,\n            `Linux; Android 7.1; ${UserAgentOptions.device}`,\n            `Linux; Android 8.0; ${UserAgentOptions.device}`,\n            `Linux; Android 9.0; ${UserAgentOptions.device}`,\n            `Linux; Android 10.0; ${UserAgentOptions.device}`,\n            `Linux; Android 11.0; ${UserAgentOptions.device}`,\n            `Linux; Android 12.0; ${UserAgentOptions.device}`\n        ]\n        :\n        os == 'iOS' ? \n        [\n            `iPad; CPU OS 10_3_2 like Mac OS X`,\n            `iPhone; CPU OS 10_3_2 like Mac OS X`,\n            `iPod touch; CPU OS 10_3_2 like Mac OS X`,\n            `iPad; CPU OS 11_0 like Mac OS X`,\n            `iPhone; CPU OS 11_0 like Mac OS X`,\n            `iPod touch; CPU OS 11_0 like Mac OS X`,\n            `iPad; CPU OS 12_0 like Mac OS X`,\n            `iPhone; CPU OS 12_0 like Mac OS X`,\n            `iPod touch; CPU OS 12_0 like Mac OS X`,\n            `iPad; CPU OS 13_0 like Mac OS X`,\n            `iPhone; CPU OS 13_0 like Mac OS X`,\n        ] : \n        [\n            'Windows NT 6.1; Win64; x64',\n            'Windows NT 10.0; Win64; x64',\n            'Windows NT 6.3; Win64; x64',\n            'Windows NT 6.1; WOW64',\n            'Windows NT 10.0',\n            'Windows NT 5.1',\n            'Macintosh; Intel Mac OS X 10_10_5',\n            'Macintosh; Intel Mac OS X 10_12_2',\n            'Macintosh; Intel Mac OS X 10_12_3',\n            'Macintosh; Intel Mac OS X 10_9_5',\n            'Macintosh; Intel Mac OS X 10_12_0',\n            'Macintosh; Intel Mac OS X 10_12_1',\n            'Macintosh; Intel Mac OS X 10_11_6',\n            'X11; Ubuntu; Linux x86_64; rv:53.0',\n            'X11; Linux x86_64',\n            'X11; Linux x86_64; rv:53.0',\n            'X11; Linux x86_64; rv:52.0',\n            `Linux; Android 4.2.2; ${UserAgentOptions.device}`,\n            `Linux; Android 4.4; ${UserAgentOptions.device}`,\n            `Linux; Android 5.0; ${UserAgentOptions.device}`,\n            `Linux; Android 5.1; ${UserAgentOptions.device}`,\n            `Linux; Android 6.0; ${UserAgentOptions.device}`,\n            `Linux; Android 7.0; ${UserAgentOptions.device}`,\n            `Linux; Android 7.1; ${UserAgentOptions.device}`,\n            `Linux; Android 8.0; ${UserAgentOptions.device}`,\n            `Linux; Android 9.0; ${UserAgentOptions.device}`,\n            `Linux; Android 10.0; ${UserAgentOptions.device}`,\n            `Linux; Android 11.0; ${UserAgentOptions.device}`,\n            `Linux; Android 12.0; ${UserAgentOptions.device}`,\n            `iPad; CPU OS 10_3_2 like Mac OS X`,\n            `iPhone; CPU OS 10_3_2 like Mac OS X`,\n            `iPod touch; CPU OS 10_3_2 like Mac OS X`,\n            `iPad; CPU OS 11_0 like Mac OS X`,\n            `iPhone; CPU OS 11_0 like Mac OS X`,\n            `iPod touch; CPU OS 11_0 like Mac OS X`,\n            `iPad; CPU OS 12_0 like Mac OS X`,\n            `iPhone; CPU OS 12_0 like Mac OS X`,\n            `iPod touch; CPU OS 12_0 like Mac OS X`,\n            `iPad; CPU OS 13_0 like Mac OS X`,\n            `iPhone; CPU OS 13_0 like Mac OS X`,\n        ];\n\n        var getOS = parsedOS[Math.floor(Math.random() * parsedOS.length)];\n\n        var UserAgent = '';\n        if(UserAgentOptions.browser == 'Chrome') {\n            UserAgent = generateChrome(UserAgentOptions.version, getOS, UserAgentOptions.device);\n        } else if(UserAgentOptions.browser == 'Firefox') {\n            UserAgent = generateFirefox(UserAgentOptions.version, getOS, UserAgentOptions.device);\n        } else if(UserAgentOptions.browser == 'Safari') {\n            UserAgent = generateSafari(UserAgentOptions.version, getOS, UserAgentOptions.device);\n        } else if(UserAgentOptions.os == 'Android') {\n            UserAgent = generateAndroid(UserAgentOptions.version, getOS, UserAgentOptions.version);\n        } else if(UserAgentOptions.browser == 'Edge') {\n            UserAgent = generateEdge(UserAgentOptions.version, getOS, UserAgentOptions.device);\n        } else if(UserAgentOptions.browser == 'Opera') {\n            UserAgent = generateChrome(UserAgentOptions.version, getOS, UserAgentOptions.device);\n        };\n        \n\n        return UserAgent;\n    };\n\n\n};\n\n\nexport {\n    GenerateUserAgentOptions,\n    UserAgentOS,\n    UserAgentBrowser,\n    UserAgentDevice,\n    chromeWebkitVersions as ChromeVersions,\n    androidWebkitVersions as AndroidVersions,\n    safariWebkitVersions as SafariVersions,\n    getRandomVersion,\n    generateChrome,\n    generateFirefox,\n    generateSafari,\n    generateAndroid,\n    generateEdge\n};"],"mappings":"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","names":["Headers","request","os","options","Method","ResponseEncoding","ContentType","ResponseType","StatusCode","options","request","requestOptions","Headers","options","version","Proxy","version","os","os","options","version","UserAgent","request","options"]}