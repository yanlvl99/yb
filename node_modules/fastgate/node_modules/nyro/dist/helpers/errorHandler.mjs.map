{"version":3,"sources":["../../src/helpers/errorHandler.ts"],"names":[],"mappings":";;;;;AAqBA,IAAqB,aAAA,GAArB,MAAqB,aAAA,SAAqB,KAAM,CAAA;AAAA,EAG5C,YAAY,mBAA0C,EAAA;AAxB1D,IAAA,IAAA,EAAA,CAAA;AAyBQ,IAAA,KAAA,CAAM,oBAAoB,OAAO,CAAA,CAAA;AACjC,IAAA,IAAA,CAAK,IAAO,GAAA,WAAA,CAAA;AACZ,IAAA,IAAA,CAAK,iBAAiB,mBAAoB,CAAA,cAAA,CAAA;AAC1C,IAAA,IAAA,CAAK,aAAa,mBAAoB,CAAA,UAAA,CAAA;AACtC,IAAK,IAAA,CAAA,KAAA,GAAA,CAAQ,EAAoB,GAAA,mBAAA,CAAA,KAAA,KAApB,IAA2B,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAA,CAAA;AAAA,GAC5C;AACJ,CAAA,CAAA;AAVgD,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA,CAAA;AAAhD,IAAqB,YAArB,GAAA,cAAA","file":"errorHandler.mjs","sourcesContent":["\n/**\n * Interface representing the options for handling errors.\n * \n * @interface ErrorHandlerOptions\n * \n * @property {string} message - The error message to be displayed.\n * @property {any} [requestOptions] - Optional request options associated with the error.\n * @property {number} statusCode - The HTTP status code associated with the error.\n * @property {string} name - The name of the error.\n * @property {Error} [error] - Optional original error object.\n */\ninterface ErrorHandlerOptions {\n    message: string;\n    requestOptions?: any;\n    statusCode: number;\n    name: string;\n    error?: Error;\n}\n\n\nexport default class ErrorHandler extends Error {\n    requestOptions?: any;\n    statusCode: number;\n    constructor(errorHandlerOptions: ErrorHandlerOptions) {\n        super(errorHandlerOptions.message);\n        this.name = 'NyroError';\n        this.requestOptions = errorHandlerOptions.requestOptions;\n        this.statusCode = errorHandlerOptions.statusCode;\n        this.stack = errorHandlerOptions.error?.stack;\n    }\n}"]}